Submission Title,Submission Url,Plain Description,Video,Website,File Url,Desired Prizes,Built With,First Time,What Room Are You In?,What's Your Table Number?,Mlh Points,Mlh Hardware Lab,Mlh Software Lab,Submitter Screen Name,College/Universities Of Team Members,Additional Team Member Count,Team Member 1 Screen Name,...
PartyLink,https://hackcuv.devpost.com/submissions/113493-partylink,"Inspiration

Party Registration at college campuses right now is a tedious process, students are required to physically go to some department just so they can register their party which is why most students don't do it. We wanted to create an app that solves this, students can verify their status using their .edu emails at their campuses to prove that they're students. 

There is also no standard protocol for party registration at campuses since each campus requires different things from their students, by asking student for the same information (name,address of party,etc..) we make this application very scalable. 

What It Does

Students use this to register their parties, college campuses can use this to keep track of all the parties occurring and to ensure everyone's safety. Other students can also find registered parties and RSVP.

How We Built It

Our team used NodeJS.Ngrok (server side) as well as Javascript as the primary language, we used HTML/CSS to create the front end and we integrated the Typeform API into our project.

Challenges We Ran Into


Linking mongoDB with typeform
Retrieving data from our databases and displaying it on our HTML Page.
Restricting features we wanted to add due to the time constraint


Accomplishments That We Are Proud Of


Successfully logging data into our database using typeforms
Hosting our HTML pages and having them redirect properly
Implementing a minimalist design to keep the user experience simple and to the point
Working as a team to solve issues


What We Learned


Greater understanding of databases
Additional experience in HTML/CSS, Javascript, NodeJS, and React


What's Next For PartyLink

Has potential to include APIs for some features. We originally wanted to include a map pin pointing all on/off campus student parties and also to add Snapchat Bitmoji integration but time was limited. There is also lots of room to expand communications with users of the application and their Universities.
",,https://github.com/Mohit-Doshi/Hack-CU-V,,"Best usage of Typeform APIs, MLH: Best Use of Snap Kit, Coolest Hack with Twilio, Best Beginner Hack, MLH: Best Domain Registered with Domain.com","node.js, mongodb, javascript, ngrok, api, typeform-api, react",1,Main auditorium,34,"Colorado State University, Arizona State University, University of Colorado at Boulder","",Domain.com,Kareemator,"Colorado State University, Arizona State University, University of Colorado at Boulder",3,MohitDoshi,imjncarlson,djblackbelt
CreateHUB,https://hackcuv.devpost.com/submissions/113508-createhub,"GitHub: https://github.com/vitr2218/HackCUProject

Inspiration

Connect and Create: 
Out there is a programmer who develops games in their free time, an artist who is an avid gamer, and a composer-producer who has always wanted to work on a game. Or a singer who wants art and video to go with their original song. Or someone who wants to construct a campaign complete with visuals to help illustrate their worthy cause. CreateHUB intends to bring together these creators and connect them on like-minded projects in both the amateur and professional scenes. 

The way creators currently come together involves investing time and interaction on sites such as Twitter, Instagram, ArtStation, SoundCloud, GitHub and a dose of luck in discovering a fellow creative who fits into their dream project. Even then, it is difficult to know whether or not someone would be willing and available to take on a project. CreateHUB's motivation is to cultivate a centralized space for singers, artists, programmers, video editors, composers, creators from all tracks to collaborate on projects like music, comics, videos, and games.

What it does

Provides a way for creators to explore potential projects in the marketplace and display a portfolio. Users can sign up using typeform.

How we built it

HTML/CSS, Javascript, typeform (signup), firebase as the database for user data and host for the web app, node packages, express, angular

Challenges we ran into

We were unfamiliar with using typeform and firebase so everything was a learning experience. Also, agreeing on an idea was difficult and time consuming.

Accomplishments that we're proud of

Building something and working with tools we've never used before. We're proud that we were able to pass data between typeform on the website and firebase. We really pushed ourselves by learning new things instead of sticking to what we already know.

What we learned

Firebase, typeform, HTML/CSS/Javascript hacks, angular

What's next for CreateHUB

World takeover. 
",,https://createhub-a1e47.firebaseapp.com,,"Best usage of Typeform APIs, Best Beginner Hack","typeform, html5, css3, javascript, firebase, node.js, angular.js, bootstrap, express.js",1,Lobby,10,"Marquette University, University of Colorado-Boulder","","",qlychee,"University of Colorado at Boulder, Marquette University",3,colleendunlap,vitr2218,ChatHelper
Distributed Multi User Dungeon,https://hackcuv.devpost.com/submissions/113510-distributed-multi-user-dungeon,"Inspiration

What it does

DMUD is a way to run any multi user text-based adventure including user made adventures. It supports any device including mobile, SMS, web, and desktop. DMUD is decentralized and uses the interplanetary filesystem (IPFS) to store data, rather than storing it on a central server. DMUD is a peer-to-peer system, again requiring no central server, little setup, and no specific network requirements.

How we built it

DMUD is built with Python. It uses the Twilio SMS API to connect players via text message and uses the Python IPFS bindings to store data in YAML format on the IPFS. 

Challenges we ran into

We learned that peer-to-peer libraries are finicky and require a specific network setup that we don't have access to at a hackathon. We also learned a lot about the pitfalls of object oriented design, especially with complex object interactions.

What's next for Distributed Multi User Dungeon

We would like to implement a more robust connection mechanism and improve the user interface.
",,https://gitlab.com/edwargix/multi-user-dungeon,,Coolest Hack with Twilio,"python, twilio, ipfs",1,Main audiotorium,35,Colorado School of Mines,"","",jordannewport,Colorado School of Mines,2,edwargix,jwestarp
KRYPTIA,https://hackcuv.devpost.com/submissions/113512-kryptia,"Summary

KRYPTIA is a multiplayer competitive educational game for Android or IOS in which participants challenge each other to prove who is the one able to decipher hidden words quicker. The game allows the player to compete in Challenging Duels (1 vs 1) or participate in Grand Challenges (All vs All). This last one has an “Educational Challenge”, which allows a teacher to take control of a Grand Challenge mode, making children from the same class or school compete with each other under their teacher’s supervision. This works as a tool that empowers teachers  that want to introduce cybersecurity and cyphration to children in a fun and proactive way.

Game Objective

The objective of the game is to get the higher\st amount of points. When in a game, KRYPTIA will show the same 10 different questions to the users that are competing. Depending on the time needed to correctly answer each question, the times that you answered them wrong, and the position respect other users to answer each question, users will get more points. After everybody has answered all questions, points are displayed and winner (a podium of 3) is declared.

Storyline

You are a interstellar traveller in a world where something called Earth is the last turistic call. But there is a problem: as people from all over the galaxy gather there, nobody understands anybody. So, in order to understand what they are saying from this extremely interesting place called “Earth”, you need to decipher what they are saying! Gather some friends to join you in this planet, and try to find out who is the quicker decypher.

Learning Objectives

User Centered Objectives


Motivate children to independently learn basic encrypting skills
Teach children about US cybersecurity current situation and challenges.
Help teachers to teach basic mathematical conversions (alphabet, decimal, binary, hexadecimal) in a participative and enjoyable way.
Provide tools to teachers that want to rise cybersecurity awareness to their pupils.


Skills Learned by Users


Ability to make critical observations.
Extract important information and patterns.
Understand the basic cyphration techniques
Capability to solve abstract problems.


Challenges Structures

The users, during the game, will have to solve 10 “challenges”. Each challenge is a question that has to be answered. These questions fall in three different categories.


Category 1: determined before starting the match, sets the topic of the questions.
-- Examples: Food facts; Countries facts; Cybersecurity facts.
Category 2: determines if what has been coded is a sentence or a number. The solution to the sentence type will be a word. The solution to number types will be a number.
-- Examples Sentences: Uif dpmps pg uif topx? (The color of the snow?) Answer: White.
-- Examples Numbers: In 2040 (1939) started WWII. Answer: 1939.
Category 3:determines how the question is coded.


Game Flow

You load into the game with your username and your password.
When loaded, you can change your avatar.
In the main menu you can see:
    Start a new Game
    Enter a started game
    Continue playing a game you had already started
    See the progress in a game you have finished playing, but need to wait for other players
    See your stats.

When you start a new game, you can set three different game modes:


Duel Challenge: In this game mode you play a quick match of a random topic against a friend.
Kryptia Storm: In this game mode there is one person that designs one challenge and the other people join the room (up to 10 people). Then, asynchronously, people complete the 10 questions on the topic. The one with more points win.
Grand Challenge: (class mode) in this last game mode, the teacher can control all aspects of the challenge Controlling the 3 categories of each question, and even making its own ones! The point is that on that class they would have been taught how to solve it and the reward could be either a class ranking or the ones who finish can go to the playground so the faster you solve the challenge the more play time you get.


Scoring


500 points - 1 point per second left
100 points if you are first
80 points if you are second
60 points if you are third
-20 points if you are wrong
Maxim total points: 6000

",,https://github.com/rhuertalluch/Kryptia,,"Design, Build or Break Cyber Games for K-12 Education","python, adobe, ableton-live",1,Eldora,5,CU Boulder,"","",RogerHuertaiLluch,University of Colorado at Boulder,3,alma7479,miquelro97,victorcrespo
CodeX,https://hackcuv.devpost.com/submissions/113529-codex,"Inspiration

Read the Project Documentation

What it does

How we built it

Challenges we ran into

Accomplishments that we're proud of

What we learned

What's next for CodeX
",,https://github.com/ShoesForClues/HackCU-CodeX,,"Design, Build or Break Cyber Games for K-12 Education","lua, c++, fusion, love2d",1,Main auditorium,"N/A, submitting a day early so we'll find out","","","",thomasian06,University of Colorado at Boulder,0
Keppies Space Simulator,https://hackcuv.devpost.com/submissions/113530-keppies-space-simulator,"Inspiration

We wanted to make something cool with space.

What it does

Space.

How we built it

C++ and sfml using git.

Challenges we ran into

3D rendering equations and equations of motion.

Accomplishments that we're proud of

What we learned

A lot about the motion of celestial objects.

What's next for Keppies Space Simulator

Spaceships and life on planets.
",,https://github.com/tdepke2/KeppiesSpaceSim,,Best Beginner Hack,"c++, sfml",1,Vail,1,"","","",tdepke,Colorado School of Mines,0
MIXBOY Advance,https://hackcuv.devpost.com/submissions/113533-mixboy-advance,"Inspiration

Perhaps the most iconic instrument in contemporary music – especially hip-hop – is the sampler/sequencer (here's one of my favorite videos about how some beautiful music came from it https://youtu.be/SENzTt3ftiU). In short; it's an instrument that takes any sample of audio – speech, music, drums – chops it into 16 to 32 discrete sounds, and then lets you play those sounds as though they were notes on a keyboard. It also lets you sequence/save what you play; when you record, it determines where in a 32-bar sequence an individual note you played should go, and then it plays back that sequence later on.

It costs in the four figures, though; we wanted to build something similar that'd work out of your browser, would be compatible with even the cheapest (starting at $20) controller/pad/keyboard, and would be easy for kids & adults to use. To that end, we built it with React.js, and for the audio input we take in and chop any YouTube URL.

What it does

Our tool does exactly what we described the iconic MPC sampler/sequencer does; it lets you take in any audio input (via YouTube), chops it into 24 discrete sounds, and lets you play those sounds and sequence/save them. Once you're recorded your playing (and it sequences what you've made), your URL automatically becomes share-able so that you can share your creation with anyone!

How we built it

Lot's of React, a WebMIDI library, convoluted sequencer logic, lots of tacky nostalgic CSS and GIFs :)

Challenges we ran into

The logic behind writing a sequencer is actually kinda complicated, and it took us a while to wrap our heads around. We also attempted making this a multi-track instrument, but keeping time synchronized in JavaScript is challenging enough that we decided to defer that to after the hackathon.

Accomplishments that we're proud of

It's hard to build a sequencer! We built one. We turned a several hundred/thousand dollar instrument into one that is now accessible to anyone with a laptop and maybe $20. We made an instrument inspired by what the pros use, but that's accessible to even a 4-year old who just wants to make a Baby Shark remix.

What's next for MIXBOY Advance

Turning it into a full-fledged multi-track sequencer instead of just one sample one track. Figuring out better ways to process the audio. Putting it in front of kids to see what kinds of creative stuff they can come up with.
",,http://mixboy.surge.sh,,"","react, midi.js, webmidi, love, kirby",1,Main auditorium,idk yet,CU Boulder,"","",krrishd,"University of Colorado, Boulder, University of Colorado at Boulder",1,MichaelMerola
autoBleep,https://hackcuv.devpost.com/submissions/113577-autobleep,"autoBleep

A neural net enabled video project to read lips and anticipate bad words

The project

The AutoBleep is a program designed to bleep live video/audio, using video trained on a subjects face. The objective is for the program to detect the first part of a bad word though live video analysis.

The tech

The project is built off of openCV and keras primarily. An openCV program running a haar classification cascade grabs pictures of a subjects mouth every few frames, then runs them through the classifcation model.
",,https://github.com/MathiasStensrud/autoBleep,,"","python, keras, sklearn",1,"Lobby, South half, against the windows pointing into the courtyard.",21,CU,"","",MathiasStensrud,University of Colorado at Boulder,0
EZReceipt,https://hackcuv.devpost.com/submissions/113579-ezreceipt,"Receipts are a pain to manage. This app fixes this big issue.
",,,,"","react, go",1,lobby,123,"","","",jameskim,University of Washington,0
CyberHack (Demo),https://hackcuv.devpost.com/submissions/113580-cyberhack-demo,"Inspiration

The inspiration for this game primarily came from the series called ""Welcome To The Game."" These games had a unique way of implementing elements of computer science and programming into the mechanics of the game through randomly generated minigames in real time. The source of inspiration for the multiple choice section came from basic trivia style video games.

What it does

The basic rundown of the program starts with the reading functions that implement all the necessary variables to run the game and trivia from txt.files. This is run in the background and the user will not notice unless a txt.file is missing or corrupted. 
Then it displays the first menu options: Start a new game, Continue from a save file, Read the rules, or quit. The program is able to handle both starting from a new game and reading saved data from a save file and continuing from that savepoint. 
If you select a new game, you can select the difficulty, which determines the number of rounds to play. For each round, the game randomly selects a minigame and pulls a question from the database. 
Minigame one is Programmer, where the user is asked to type in the displayed code as shown and is rewarded points for full accuracy. Minigame two is Pop Quiz, which asks multiple choice questions on basic cybersecurity concepts.

How I built it

Every program starts with a concept, outline, and/or pseudocode. I start with determining what are the end goals of the program and what variables are needed throughout the function. Since I wanted to develop the functions for reading and writing save files, I had to design multiple functions and an organized system to handle and store the necessary variables to be accessed or changed at any time. Then, I started with the implementation of a class to organize and run all the functions and the driver to start the game running process. Afterward, I slowly worked each function associated with a different section of the game mechanics and rigorously tested every new function before proceeding to the next.

Challenges I ran into

I had 3 main challenges to overcome during the project.
The first was both using the getline functions to read in the data from the txt.files correctly. I'm not sure how it's possible to get a stoi error from a getline function, but I did that unintentionally, multiple times. Even when getline was working, then I had issues afterward storing the data in the right locations.

The second was linked list implementation for the data of multiple choice minigame. It was either a linked list or some form of a 3D array, which I can only assume would cause more disasters than I experienced with the linked list. It was primarily syntax and segfaults errors when trying to access the data from the linked lists that ultimately lead to a restructure of the minigame functions.

The last problem was my getter and setter functions for the minigame questions. The intention of these functions was to store the question string or it's index number after it was already answered as a way of avoiding duplicates in the same game. Despite my best efforts and multiple versions of these functions, if you play the game enough times, every now then you'll still see a duplicate question in the same playthrough. It occurs with a higher chance when the player continues from a saved file.

Accomplishments that I'm proud of

Despite some minor imperfections, I'm proud that I achieved creating a working demo of a game I designed on a solo team. I'm happy with the organization and planning that went into it so that my time could be more focused on troubleshooting and debugging.

What I learned

While ambition is great, I learned to not be too ambitious and know my limitations. There were ideas for more minigames, a surplus of trivia questions, even implementing some version of a real-time coding section where the player had to code the displayed text within a certain frame of time. Time was most certainly the biggest factor and at times, while I would have liked to program more complex functions and game mechanics, I did have to settle for simplicity for the sake of moving forward and finishing a working demo. Lastly, a couple last minor lessons were converting integers into strings and re-learning how to cin a string that counts spaces. 

What's next for CyberHack (Demo)

Well, the first step would be to look back at those getter and setter functions for the minigame questions and work out a new solution that fixes the issues mentioned above. Afterward, I would consider what other minigames I can implement that kids would enjoy while also educating them on cybersecurity. Lastly, I would most likely modify this code to run into some sort of game engine or user interface program to make it visually appealing as opposing to just staring text in a terminal screen the whole time. I've been told by a friend that the Unreal Engine runs on C++, so that's worth investigating for future projects.
",,https://github.com/BenjaminDashiell/CyberHack/releases/latest,,"Design, Build or Break Cyber Games for K-12 Education","c++, atom",1,East Side,19,University Of Colorado At Boulder,"","",beda8068,University of Colorado at Boulder,0
MLocation,https://hackcuv.devpost.com/submissions/113587-mlocation,"Inspiration

Our primary inspiration was the benefits this kind of technology could have on the general public. One benefit is for those who lose their technology very often. For example, the loss of a laptop or phone can be debilitating, especially in today's society. However, by using a network of interconnected nodes, we can find a registered device with ease.

What it does

Determines the precise location of a MAC address identified device by determining its distance from 3 or more locating devices (similar function to antennae).

How we built it

Using the monitor mode of network interfaces, we were able to determine the signal strength between devices in the area and an ""antenna"". After finding the strength for each device, we found the distance this signal strength correlated with. Using our triangulation algorithm, we were able to then pinpoint the exact location of the device, considering the placement of our ""antennae"". We then uploaded this data to our Google Cloud Platform (GCP) server and displayed the devices in a birds-eye view of the current room.

Challenges we ran into

Perhaps the biggest challenge we ran into was with our original idea. We originally planned to have a Raspberry Pi function as an antenna, decreasing the size and increasing the simplicity of our design. However, we learned much later that the WiFi adapters we planned on using would not support this kind of functionality and that we would have to scrap the idea for our own computers with much more supported internet cards.

Accomplishments that we're proud of

Accuracy

What we learned

We learned that USB WiFi adapters are no substitute for the internal WiFi cards already enclosed within our other computers.

What's next for MLocation

We plan on using WiFi adapters that are supported with Raspberry Pis as well as implement other methods of determining a location (such as angle of arrival, time of arrival, and channel state information) in the future in order to fulfill our original vision.
",,,,"Big Data Analytics: Non-Obvious Web Traffic, Best Hardware Hack, MLH: Best use of Google Cloud Platform, Dish Device Tracker","python, gcp, easel.js, rssi",1,Main auditorium,33,Colorado School of Mines,"",Google Cloud Platform,BenPerkins336,Colorado School of Mines,3,sumnerevans,nickjar99,jnunez101
Food Lord,https://hackcuv.devpost.com/submissions/113619-food-lord,"Inspiration

Have you ever thought about what are you really eating? Maybe no. Are you too lazy for counting calories and for monitoring if you exceed the limit? Maybe yes. Here is where Food Lord borns. An application that allows you to take a picture and automagically know what are you gonna eat!

What it does

Our web app allows you to estimate how many calories and which ingredients there are in the picture that you sent to the application. In order to do that, you only have to create an account and then take a picture or upload an image.

We know that this magic process could have bad results or ingredients that there aren't in the given image. In order to solve that, we've added a feature that allows you to add and remove ingredients to the processed image.

Finally, the app will save this data (known as a report) and they will be available to check in the user dashboard, where you can have a quick look about how you have been eating during the current week.

How we built it

Frontend and backend are very different components connected by API requests.

At frontend, we can see a React application that uses the library Grommet in order to use the UI components and integrated into a Docker compose.

In the other side of the application, we have the backend which is implemented with Python 3.6+. For creating the API that allows the communication between the two components, we have used Flask and OpenAPI (connected themselves with Connexion library), also integrated with Docker compose.

The core of the application, which allows us to estimate the calories and ingredients of a given image, has been possible thanks to RapidAPI. Food Lord is using these three APIs:


Imagga: this API allows us to use a Computer vision segmentation model for tagging all the objects that we get from the image. We also filter these tags using a threshold of 0.35 (35%).
Recipe: this API allows for getting all the ingredients from a huge database. This permits us to filter the results that we got from Imagga Image Recognition API.
Nutritionix: this API allows us to get all the information related to calories. Given a list of ingredients, we can get an estimation of how many calories have those ingredients.


This aggregation of APIs (called Food Lord API) has been deployed and exposed in the RapidAPI Marketplace, where you can test with an Internet-accessible image URL.

All this system is finally deployed in a Google Cloud VM and hosted in a free .tk domain.

Challenges we ran into

Since we have never used the kind of technology we needed to do a deep research in order to find the APIs to use with RapidAPI. Also we have found some problems when we were coding the fronted because we used a new library for us – Grommet components.

However, the most challenging part was deploying the web in Google Cloud Platform since a lot of ports of the Wi-Fi were blocked.

Accomplishments that we're proud of

We are proud of the project that we built. We have developed all the web app faster than we actually expected so we can take special care of a good UX experience and reach the objectives that we have.

What we learned

We learned a lot using the RapidAPI and discovering the huge amount of APIs that we have at our disposal. Also, regarding the front-end part, we learned a lot using Grommet, which is a React library.

What's next for Food Lord

There are a lot of enhancements and next steps that Food Lord could have. But, for example, could be interesting to share the meals and their estimations with the user dietist so he/she could help the user to be even healthier.
",,https://github.com/atsuky/foodlord,,"RapidAPI Best OctoAPI Hack, MLH: Best use of Google Cloud Platform, MLH: Best Domain Registered with Domain.com","python, react, rapidapi, openapi, flask, grommet, postgresql",0,Next to screen with the schedule,18,Universitat Politècnica de Catalunya,"",Google Cloud Platform,AlbertSuarez,"Universitat Politecnica de Catalunya, UPC",3,felixarpa,charliecb,andreugallofre
Twis(e)T,https://hackcuv.devpost.com/submissions/113634-twis-e-t,"Description

Twist can give us many information on how much time we spend in each of the tasks, that is the objective of this project to get data on the amount of time we spent discussing each aspect of a thread or of the overall thread. 
",,https://github.com/gmegh/TwiseT,,Twisted hackers,"",1,Eldora,3,-,"","",guillemmegias,Universitat politecnica,0
Save Oppy,https://hackcuv.devpost.com/submissions/113639-save-oppy,"Inspiration

RIP Opportunity 2004-2019
For most people my age, the Opportunity Rover has been on Mars for the majority of our lives. Her death was met with public outcry.

What it does

The purpose of this website is to educate the public and show that opportunity has a second chance. 
",,http://saveoppy.com,,MLH: Best Domain Registered with Domain.com,"html, css, bootstrap",1,Main Lobby,1,CU Boulder,"","",ellaho,University of Colorado at Boulder,0
HackUwU,https://hackcuv.devpost.com/submissions/113649-hackuwu,"Inspiration uwu

What it does

How I built it

Challenges I ran into

Accomplishments that I'm proud of

What I learned

What's next for HackUwU
",,https://hackuwu.com,,"Best usage of Typeform APIs, MLH: Best use of Google Cloud Platform, Best Beginner Hack, MLH: Best Domain Registered with Domain.com",jekyll,1,main auditorium,1,CU Boulder,"","",Dhwani,University of Colorado at Boulder,0
CTFHero,https://hackcuv.devpost.com/submissions/113725-ctfhero,"CTFHero.com

Project for HackCU V by Sam Feig, Jay Hayward, and Mark Wilmes

We wanted to make a tool to help people learn about Cybersecurity Capture the Flag challenges and how to go about solving a few basic and fun ones! We also wanted to set up a way to host CTF competitions through the CU Cybersecurity Club and get more people involved in this amazing field. CTFHero creates a platform with a huge potential to help people who are just starting, as well as veterans,  learn and grow their skills in cybersecurity.

So go check it out! See what the hype is about and why cybersecurity is the next big thing!

We used Google Cloud to host the web server and manage the CTF sub-pages and a Domain.com domain to host the site. A Redis database houses the past challenges and the plan is to extend it to pull directly from ctftime.org for writeups from future competitions. We all improved our web development skills and learned more about Node.js and how it integrates inside a website. The plan is also to use the ""Compete"" section to run future CTFs for the CU Cybersecurity Club. 
",,http://www.ctfhero.com/,,"MLH: Best use of Google Cloud Platform, Design, Build or Break Cyber Games for K-12 Education, MLH: Best Domain Registered with Domain.com","html, javascript, css, google-cloud, domain.com, redis, node.js, python, ctfd",1,Copper Mountain (S124),9,University of Colorado Boulder,"",Google Cloud Platform,SamFeig,University of Colorado at Boulder,1,mawiwillme
Enigma,https://hackcuv.devpost.com/submissions/113751-enigma,"Inspiration

We designed and developed a Mystery Game for K-12 Cybersecurity Education.

What it does

It's a mystery game that tests the K-12 students' knowledge of cybersecurity. At each step, there are puzzles to be solved before they can go forward in the story.

How we built it

Mahshab created the storyline. Mahshab and Ghazaleh created the graphics in Photoshop and Adobe Illustrator. Ghazaleh, Sepideh and Maziyar worked on the Front End. Sepideh and Maziyar worked on the Backend and Cybersecurity questions.

Challenges we ran into

Dealing with flask; Animating page elements using Javascript; Connecting the story behind the pictures with the cybersecurity questions asked.

Accomplishments that we're proud of

Good story, good graphics, making it all work!

What we learned

We learned it's a challenging task to design for K-12, or in general, for people not in your generation.
We learned animating the page elements with JavaScript. We were challenged by and learned how to deal with flask and use python in it. 

What's next for Enigma

Implementing the rest of story (which is so interesting, but 24 hours was too short for its implementation).
",,https://github.com/goodarzysepideh/enigma,,"Design, Build or Break Cyber Games for K-12 Education","flask, html5, css3, javascript, jquery, photoshop, adobe-illustrator, python, wireshark",1,Main auditorium,38,"University of Colorado Boulder, Front Range Community College","","",ghka9436,"University of Colorado at Boulder, Front Range Community College",3,SepidehGoodarzy,maziyarnazari,mahshabtajik
Firewall Fighter,https://hackcuv.devpost.com/submissions/113758-firewall-fighter,"Inspiration

The idea of teaching kids about cybersecurity at an early age got us thinking about when we first learned about anything related to cybersecurity. Among our earliest memories included learning about firewalls, but the way we were taught about it was both uninteresting and inaccurate in hindsight. The teacher would simply put an inaccurate diagram on the board and inform us that it ""blocked most of the traffic from our computers."" We felt that this model did not properly represent the amount of parsing and work a firewall must perform, and there must be a better way to teach students about this concept.

What it does

The player controls a small ball on screen with a leap motion. Traffic (red and green cubes) enter the top of the screen and exit through the bottom. The player must direct their ball into the red malicious cubes to prevent them from entering our network while allowing as many green cubes as possible to pass through. Sounds were added so that hitting a cube feels more like a real world action. The game also gets progressively harder as the game goes on as more cubes fall in the same time period.

How we built it

We used the leap motion detect and translate hand motions into an in-game action of moving a sphere around. The sphere is simply mapped to the movements of the palm of the right hand. This sphere is then used as the ""mouse"" on screen for the user. We then used simple unity c# scripts and objects to create the cubes that fall down the screen,  instructions, and a score.

Challenges we ran into

From the onset, we had a steep learning curve to learn C# and Unity which neither of us had used before. We managed to figure them both out pretty well, but we struggled to properly detect collisions between the hand object the leap automatically creates and other objects we create. In order to resolve this problem, we had to create a sphere that followed the hand around. Then, we could use this sphere to detect collisions with other objects. This made the coding much easier, but also made the controls easier too. The user does not have to see and try to comprehend a whole hand on the screen, they can simply just move one little ball around.

Accomplishments that we're proud of

We created a working prototype of the game we envisioned in the beginning.  We're also proud the game feels somewhat natural and fun to play.

What we learned

We taught ourselves how to use three new things (leap motion, Unity, c#).

What's next for Firewall Fighter

Our game could have a bit more explanation of the cyber-security principles.
",https://youtu.be/uPgnwJoaCoo,https://github.com/Moppit/HackCU.V.,,"Best Hardware Hack, Design, Build or Break Cyber Games for K-12 Education","leap-motion, c#, unity",1,Main auditorium,36,CU Boulder,Leap Motion,"",LEL-15,University of Colorado at Boulder,1,Moppit
DebateMonkey,https://hackcuv.devpost.com/submissions/113779-debatemonkey,"Inspiration

I participated in debate in high school and still go back and judge tournaments and coach the students. I realized that the process of managing the tournament, most notably scheduling rounds, notifying competitors and maintaining results, was done in a very inefficient manner, mostly by hand. An online service does exist to provide this service, tabroom.com, but it does not have an extensive feature set, and its service is unreliable. Thats why we decided to make debate monkey, a tool to provide these service rapidly and reliably.

What it does

DebateMonkey is web service in which tournament officials can create tournaments so that students can join on their own accord. Once a tournament is created, any user with access can register for the tournament. DebateMonkey will automatically create matches and notify the students as to where their round is and who they are facing. It will also assign to judge to critique the round. Afterwards, the judge can enter their decision and comments to each team. After the judge submits this electronic ballot, DebateMonkey will automatically tabulate these matches to create finals qualifiers and overall placements. At the official's behest, the judges comments may be hidden or revealed to the competitors at whatever point. All of this functionality is available through the web interface or the app. If any students opt out of they app, they may also chose to receive notifications via SMS, using Twilio.

How I built it

The web frontend was built in ReactJS. The backend is a RESTful Django Framework, that manages a mySQL database to store all tournaments, users, and round results. The back end is responsible for tabulating the results and pushing notifications via Twilio or the App. The app was built using Flutter.

Challenges I ran into

Originally, we were a team of 4, but all of my team was forced to leave early in the HackCU tournament, leaving only me to work on the project. This resulted in this projected being far too large scale for a single person to handle. I decided to drop the app and focus mostly on the web interface. Also, I didn't have much time to focus on the styling and UX and had to focus on functionality leaving the site a little rough around the edges. The hardest technical challenges were serializing the many to many relationship with users and tournaments in the database using Django models and maintaining persistent login sessions utilizing authorization tokens. 

Accomplishments that I'm proud of

I managed to get a relatively functional site that encompasses the basic functionalities of my desired app while only having one person. The end product is still visually appealing and the UI is fairly intuitive. The Twilio API was successfully implemented and sends out a text message to a registered user.

What I learned

The technology I learned most about was Django and how to manage database models with it. I also learned how to implement the Twilio API, and also how to stay sane after 24 hours of coding alone.

What's next for DebateMonkey

Our next focus is going to be implementing the key elements that were missed, specifically ballot entry and judge enrollment. Some UI changes and overall bugfixes and I think debate monkey could be a viable product.
",,https://github.com/smmauck/DebateMonkey,,Coolest Hack with Twilio,"javascript, python, css, html",1,South ATrium,12,CU Boulder,"","",dimohammed328,University of Colorado at Boulder,0
LocationTracer,https://hackcuv.devpost.com/submissions/113786-locationtracer,"Inspiration

Inspired by true social incidents and happenings across the world. in many countries such as egypt, moroco,india we experience a constant backlash on women and children such as sexual assualt, even in the most crowded or desserted places. this may even happen to our friends or family. 
we cannot always depend on police and the government in these kind of emergencies as these countries are few of the most corrupted and insecure places in the world. 
but we believe we can always depend on the technology we have and the ability of using it to solve real world problems. and also we can depend on friends and family. 

we developed a hack where we can get to know the location of a missing beloved ones or who we think can be in danger as soon as possible with exact longitude and latitude even when there is no access of INTERNET connectivity.

What it does

This is an app which enables users to identify their beloved ones if they are out of reach. This application sends an SMS to the person whose location we want to know. Then the sms invokes an Android application and that application fetches the latitude and longitude of the user. Then it embeds that data in a Google Maps URL and send it back as an SMS to the user who requested it.

How we built it

We built the entire project on Android Studio using JAVA. We have also Android SQLite Database to store the preferences of the users. 

Challenges we ran into

Access Control is the first challenge we ran into. No user would ever like to reveal his data to an anonymous person. He would like to limit the number of people who can know his location at any point of time. So, maintaining that access control was the first hurdle.
Getting the latitude and longitude values not null is the second hurdle we passed. We used a loop and kept changing the sources of GPS location(both Internet and GPS device) and when ever we get a valid data, we exit the loop.

Accomplishments that we're proud of

The main thing that we are proud is the application has amazing accuracy. It can detect an average of 5cm motion in the mobile phone. This application survived many extreme test case conditions. This is the fastest way to retrieve a users location without flooding. 

What we learned

We learnt the implementation of BroadcastReceiver in Android and also considering the extreme conditions while developing a software application.

What's next for LocationTracer

We are looking forward to implement geofencing in it so that we can have a device with the kids and get to know if they crossed our neighborhood. We also have a designing the UI in a more enhanced manner.
",,https://github.com/hariharakumar7/locationtracer,,"Best Beginner Hack, Dish Device Tracker","java, android, xml, database",1,Main auditorium,22,Colorado State University,"","",HariHaraKumar,"Colorado State University, Sri Venkateswara university",3,lizacool612,Subramaniam,rohitg17
cyber-security-escape-room,https://hackcuv.devpost.com/submissions/113794-cyber-security-escape-room,"cyber-security-escape-room

Game made with the purpose of educating middle school students about cyber-security in a fun and approachable way. It allows the player to explore the different cyber-security concepts as they solve puzzles to exit the room. 

It takes place in a room with different intractable stations. Each station is a computer, safe, or something similar and must be navigated using a command line built into the game. The player practices using some linux commands and solves puzzles related to crytographic concepts. The player must use all the clues to figure out the final password and escape the room. 

cyber_game.py has the main game loop. 
",,https://github.com/JazKarit/cyber-security-escape-room,,"Design, Build or Break Cyber Games for K-12 Education, Best Beginner Hack","python, pygame",1,Main auditorium,24,"CU Boulder; IOE, Pulchowk, Nepal","","",jaskritsingh,"University of Colorado at Boulder, Colorado State University",3,bhattaraisakshat07,NguyenDoHuy,SuphawitDuangphumek
Eddie,https://hackcuv.devpost.com/submissions/113802-eddie,"Inspiration

Google recently released a very similar feature for their Pixel phones. As an iPhone user I was jealous and wanted the same thing for my phone.

What it does

When I decline a call (or it's blocked) the call is redirected to a digital assistant which asks the caller who they are and why they're calling. That recording and transcript is then sent to my phone via push notification. After reviewing the message I can choose to have the call connected or send them to voicemail.

How I built it

The core code is written in JavaScript. The back-end is done with node.js and the front-end is a react-native app. Missed call forwarding setup varies by carrier, but for Verizon it is activated by dailing *71. The calls are forwarded to a Twilio phone number which is controlled by the back-end. After the message is recorded via Twilio the audio is send to Google Cloud's Speech Recognition API with the model set to phone_call.

Challenges I ran into

The primary challenge I ran into was figuring out how connect a Twilio phone number to receive calls for my actual number. It took a lot of research before I discovered the missed call forwarding feature (which I now understand that most carriers support).

Accomplishments that I'm proud of

I'm very proud that the whole system works and is genuinely useful.

What I learned

I learned how to use the Twilio phone call API and how to tunnel the react-native development server over USB.

What's next for Eddie

Clean up the code, implement multi-user support on the server, and then App Store release.
",https://www.youtube.com/watch?v=ye3_rN_dTaU,,,"MLH: Best use of Google Cloud Platform, Coolest Hack with Twilio","node.js, twilio, react, react-native, google-cloud",1,Main auditorium,34,University of Colorado Boulder,"",Google Cloud Platform,wtfaremyinitials,University of Colorado at Boulder,0
Prisoner-s-Dilemma,https://hackcuv.devpost.com/submissions/113822-prisoner-s-dilemma,"Inspiration

I read about people using prisoner's dilemma like computer simulations which reproduce themselves based on the outcome of these situations. This experiments help simulate the evolution of altruistic and selfish survival strategies. I wanted to test this myself to see what the result was. 

What it does

It sets up a program with ""organisms"" with many different prisoner's dilemma strategies. The user can then have each one pair off against another in rounds of competition and see how which strategies are most successful. 

How I built it

I built it in C++  by creating a linked list of ""organisms"" with memory of past interactions. New organisms are added when they compete and every other node in the list is removed when it becomes too big. There is also a user display.

Challenges I ran into

I had trouble making sure my numbers were accurate, i.e. I didn't accidentally count the same increase in two different functions or neglect to count them. I also ran into problems with exiting loops at the correct times. My result wasn't what I expected, so I interpreted the results within the context of the experimental ""environment"" and made 2 altered simulations. 

Accomplishments that I'm proud of

I successful got the simulation to work and created a flexible interface with the user. I predicted why my code behaved the way it did and made two altered versions of it with different behavior. 

What I learned

I expanded my experience with linked lists and created a way of simulating evolution that I could expand on in the future. I learned about the viability of different moral strategies in the conditions presented in my simulation. 
I learned to look at how my code is structured to explain its behavior.

Simulation1: In this simulation cooperative organisms are initially the most successful, then uncooperative organisms take over. I figured out this is because at first organisms are more likely to be paired with organisms like themselves and over time it becomes more random.

Simulation2: In this simulation uncooperative organisms are the most successful for the entire duration. This is because the pairings are entirely random.

Simulation3: In this simulation cooperative organisms are successful for the entire duration. This is because organism's ""children"" are clustered near the parents, so they are more likely to be paired with similar organisms. 

What's next for Prisoner-s-Dilemma

I would like to alter the simulation to see how it preforms with simulated reputation. I predict reputation will make cooperative strategies more viable. 
",,https://github.com/Birdfeathers/Prisoner-s-Dilemma,,"",c++,1,Hacker Space South Area next to the screen,21,CU Boulder,"","",Birdfeathers,University of Colorado at Boulder,0
Phishing detection game,https://hackcuv.devpost.com/submissions/113826-phishing-detection-game,"inspired

By true events 

educates and prevents children on phishing and identity thefts

firstly we have copied the UI of facebook by downloading their source code and by getting registered into a onilne domain, then for the phishing , we redirected facebook login to our own php file.Now that we have users credentials, we navigate them to an ordinary website making sure the user doesn't doubt us.

Challenges we ran into

The main challenge we fought was dealing with development of a tool that has the ability to detect such websites. We had to try numerous machine learning models inorder to get the best accuracy.

Accomplishments that we're proud of

We have a whooping accuracy of 99.1% in detecting phishing websites and even implemented that in a python GUI application.

What we learned

We learned about developing Python GUI applications and some machine learning models.

What's next for Phishing detection game

We are thinking to develop a stunning User Interface for that and also embed a browser in it so that the player can view the webpage right in the game console.
",,https://github.com/hariharakumar7/phishing-detection-game,,"Best Smart contract usage, Design, Build or Break Cyber Games for K-12 Education, Best Beginner Hack, MLH: Best Domain Registered with Domain.com","python, html, css, javascript, machine-learning",1,Main auditorium,22,Colorado State University,"","",rohitg17,"Sri Venkateswara university, Colorado State University",3,lizacool612,HariHaraKumar,Subramaniam
Bike Ride Tracker,https://hackcuv.devpost.com/submissions/113829-bike-ride-tracker,"Inspiration

Allow kids to bike around and explore parks and other fun landmarks near them and earn points doing so.

What it does

Allows users to bike around and discover parks and other landmarks in boulder and earn points for each location discovered.

How I built it

Used dart and the flutter framework to create a mobile app for both ios and android. I also used the google maps api to create a dynamic map and add markers to the map which could be discovered by users.

Challenges I ran into

The original flutter plugin I wanted to use was broken which required a lot of time to get working properly. Along with that the original haversine plugin I was going to use did not work with the most recent version of Dart which caused me to have to recreate the plugin. 

Accomplishments that I'm proud of

Implemented google maps api

What I learned

How to use the location and maps plugin for flutter along with the haversine formula to calculate the distance between a user and a marked location.

What's next for Bike Ride Tracker

Use google places api to automatically create new places to explore!
Also finish implementation of the stats page to show the user where they have been and the number of points collected
",,,,"Kids + Bikes = happier, more attentive students in the classroom, MLH: Best use of Google Cloud Platform, Best Beginner Hack","flutter, dart, google-maps",1,Main auditorium,1,University of Colorado Boulder,"",Google Cloud Platform,AngusFiedler,University of Colorado at Boulder,0
AdventureGame,https://hackcuv.devpost.com/submissions/113830-adventuregame,"hackcu
",,https://github.com/aislinnjeske/hackcu,,Best Beginner Hack,java,1,Main auditorium,42,Colorado State University,"","",ThomasKeefe,Colorado State University,2,ashlynrlee,dudeax
RapidPark,https://hackcuv.devpost.com/submissions/113831-rapidpark,"Inspiration

Parking at the Colorado School of Mines is always a tricky task, so we decided to build a system to prevent the need to drive around looking for a parking place. 

What it does

RapidPark is a system of cameras stationed at entrances to parking lots that detects cars entering and leaving the parking lot. When a car is detected, it will update the current lot capacity on the heat-mapped google maps web application. The system updates in real-time, and uses fast computer-vision classification apis to take the images of the cars and detects aspects of them, such as license plates

How we built it

We built RapidPark around an Angular webapp utilizing Python Flask on the backend. Any ""detection system"" that is capable of HTTP requests has the ability to update the parking lot availability. We used Python OpenCV for motion detection and frame parsing to detect direction and key frame grabs during the motion. We tested this system on a raspberry Pi 3, and subsequently created an entire detector for ~$50

Challenges we ran into

Google Cloud storage has so many authentication steps -- it really was a mess to get set up and we couldn't implement it in the end. 

Accomplishments that we're proud of

RapidPark is extremely fast and extremely intuitive. It serves an very useful application and was more fun to develop the more we got into it!

What we learned

Flask, Javascript, and rapidAPI!

What's next for rapidPark

Implement the administrative side for real-time parking violation detection.
",https://youtu.be/0Sac6gwPPak,,,"RapidAPI Best OctoAPI Hack, Best Hardware Hack, MLH: Best use of Google Cloud Platform, Dish Device Tracker","python, opencv, node.js, angular.js, google-maps, rapidapi, uploadcare, chart.js, flask, javascript",1,Main auditorium,30,Colorado School of Mines,"",Google Cloud Platform,EastonBornemeier,Colorado School of Mines,2,kfarris,ZKasica
Bike Hero,https://hackcuv.devpost.com/submissions/113834-bike-hero,"Inspiration

Submission for Specialized's challenge. 
ADHD kids struggle in classrooms
Child obesity
Video game addiction
Fewer opportunities for kids to be outside
With an app that has snap chat integration, kids will be more inclined to use it. Everyone loves Snapchat.

What it does

Our app allows the gamification of biking to push kids to go outside. The app tracks your biking statistics to give you a score and level, to make physical activity more of a game. In addition, we implemented Snap Kit, adding Snapchat logins, Bitmojis, and allowing your game to be shared on Snapchat seamlessly. 91% of kids think Riding for Focus is a fun program, and 93% of kids would recommend it to a friend, and our application only further incentivizes this. 

How we built it

HTML, CSS, JS-Node, Cordova, Twist API, Swift, Xcode, Snap Kit Creative, Bitmoji, and Login.

Challenges we ran into

There were many problems using the Snap Kit SDK as it was very new. But once this was all figured out it was smooth sailing.

Accomplishments that we're proud of

Gorgeous user interface, that links with Snapchat to create a data-rich sticker.

What we learned

What's next for Bike Hero

We're going to Disney Land.
",,,,"MLH: Best Use of Snap Kit, Kids + Bikes = happier, more attentive students in the classroom, Twisted hackers, MLH: Best use of Google Cloud Platform, Coolest Hack with Twilio","html5, css3, mapbox, swift, snap-kit, twilio, github, javascript, postgresql, google-cloud, xcode",0,Hacker Space,17,CU Boulder,"",Snap,SandeepSKaushik,University of Colorado at Boulder,3,Jaxkr,culsense,42ultra
Get The Fuck App,https://hackcuv.devpost.com/submissions/113862-get-the-fuck-app,"GetTheFuckApp

Inspiration

We have friends (definitely friends, not us) who are terrible at waking up on time. We figured out we should help them, in the worst way we know.

What it does

You set an alarm time, then it starts ringing with a soothing melody from a crafted Spotify list. If you keep ignoring the alarm, the songs become more and more obnoxious.

How we built it

We built a simple Android app and added a connection to Spotify through the Remote App SDK.

Challenges we ran into

There's always problems with authentication with 3rd party service providers, but once that was solved, the rest was pretty straightforward.

Accomplishments that we are proud of

Relearning how Android development works after may years without developing an app.

What we learned

How to integrate Spotify

What's next for Get The Fuck App

Making the app more usable, maybe release on Google Play Store
",,https://github.com/ani300/GetTheFuckApp,,MLH: Best Domain Registered with Domain.com,java,0,Main Lobby,18,"Texas A&M University, MIT, UC Irvine, CU Boulder","","",aviros,"Cornell University, Texas A&M University, University of Colorado at Boulder",3,osfu6738,joseales,ximo_g_
NEkeyMark2,https://hackcuv.devpost.com/submissions/113864-nekeymark2,"Our inspiration came from typing papers late into the night and waking up the next morning with ache-y wrists. And that's when it hit us. There has to be a better way. Standard keyboards can be great for fast and accurate typing, but  we are not all blessed with ten working fingers and two working wrists. 

That is why we have created NEkey (pronounced ""any key"").

NEkey allows users to control both keyboard and mouse inputs using only a common video game controller. We achieved this by making two wheel menus around the joysticks. The left joystick selects the layer of different inputs while the right joystick is used to select and type the character.

Mouse controls are handled similarly, once the mouse control button is toggled the joysticks control the cursor. Primary and secondary click are handled through the bumper buttons on the controller.
",,https://github.com/W1r3W0lf/NEkeyMark2,,"",python,0,hackerspace,15,"BYU Idaho, CU  Boulder","","",W1r3W0lf,"Brigham Young University - Idaho, University of Colorado at Boulder",1,JuanchoVilla
Twilio Slack Post,https://hackcuv.devpost.com/submissions/113869-twilio-slack-post,"Inspiration

Learning and Exploring Twilio. 

What it does

It allows HackCU people to post information and doubts expressed by students in the respective Slack Channel. I have created 3 different slack channels parking, accommodation and hacking. When people sends a SMS to the twilio number their messages will be posted in the Slack Channel that is related to their message.

How we built it

We built it using Twilio flows, widget libraries and slack web-hook integration. I used a HTTP request to POST message to the slack channel.

Challenges we ran into

Figuring out how to enable webhook integration, Posting on Slack using Http request.

Accomplishments that we're proud of

The working of application as we expected it to be.

What we learned

The poetential applications of twilio and how to use it to build something cool.

What's next for Twilio Slack Post

We can filter the messages that are important to user and let the user notify through SMS even when the user is offline.
",,https://www.twilio.com/console/studio/flows/FW019161c3165a86dc1f84ca565f67328c,,"Coolest Hack with Twilio, Best Beginner Hack","twilio, flows, widget-libraries, webhook-integration, slack",1,Main auditorium,22,colorado state university,"","",lizacool612,"Sri Venkateswara university, Colorado State University",3,HariHaraKumar,Subramaniam,rohitg17
Twitter User Stats,https://hackcuv.devpost.com/submissions/113883-twitter-user-stats,"Inspiration

We were interested in working with the Twitter API, and thought it would be really interesting to see some general stats about certain profiles. 

What it does

Our program analyzes a given user profile's page and calculates interesting stats. For example, their most popular tweets and most popular followers

How we built it

We used Python as a back end, taking advantage of Tweepy and the Twitter API. From there, we used Flask to integrate our Python with the front end, which was comprised of HTML and JavaScript.

Challenges we ran into

Figuring out how to use the Twitter API at first was confusing at first. We spent a lot of time looking at references to see what we could do with it. Also, We ran into problems with connecting the front end HTML files and the back end Python code. We eventually settled on use Flask which is a Python based code that allows a seamless integration between Python code and HTML basics. We had to make some compromises due to time and lack of experience, including not doing embedded tweets, but we believe it turned out pretty well.

Accomplishments that we're proud of

This is our entire team's first hackathon, so we are really proud of how our project ended up with this in consideration. It was Jacob's first major program in python, and his first time ever using an API. Dylan and Connor are really proud of figuring out how to take Jacob's back end and connect it to a front end, as they have never done this before either.  

What we learned

Using the Twitter API, front end back end connection, and how fun hackathons are!

What's next for Twitter User Stats

We will probably work on minor improvements from here, possibly running outside of flask so that others can use the service by using an online server instead of a local one. Also, if we can figure out embedded tweets that would be great.
",,https://github.com/Drsain/HackCU52019,,"Best use of Twitter API, Best Beginner Hack","python, twitter, javascript, html, flask",1,Main auditorium,unknown,University of Colorado,"","",jacobfelknor,University of Colorado at Boulder,1,connorhorn26
Surf - Predictive Browsing Plugin,https://hackcuv.devpost.com/submissions/113885-surf-predictive-browsing-plugin,"#26

Inspiration

When thinking about how to use big data for good, we came up with the concept for Surf in order to help users understand their browsing habits and even make some common tasks quicker and easier.

What it does

Surf is a Chrome extension that intelligently suggests sites a user may want to visit based on browsing activity, such as browsing history, mouse movements, and user habits. At the top right of each site, users will see an unobtrusive list of suggestions for that site. By mousing over this bar at the top right, users will see an expanded list from which they can select their next destination

Surf also has a companion Android app that allows users to look at their browsing habits as well as access their most used links.

How we built it

The extension collects various metadata and uses a PageRank-style algorithm to determine a list of suggestions for each website a user visits, and this list changes dynamically as users continue to browse. It syncs this data to a Firebase database, which the companion app reads from.

Challenges we ran into


Generating/collecting test data to assist in modifying the algorithm was time-consuming
Hooking up the extension and app to Firebase complicated things considerably


Accomplishments that we're proud of

The extension is sleek and genuinely useful, and the android app provides interesting insights into user browsing habits.

What we learned

Building and testing something that's meant to handle lots of data is difficult to do quickly, and adding users and databases complicates things even more.

What's next for Surf - Predictive Browsing Plugin


Enhance algorithm by training a machine learning classifier (we need to collect more real data)
iOS companion app, Firefox/Safari/etc. extensions
More sophisticated user handling/login system
End-to-end encryption of user data, so we can't spy on users


Github


Extension
App
Website

",,https://surf-plugin.com,,"Splunk Challenge, Big Data Analytics: Non-Obvious Web Traffic, MLH: Best Domain Registered with Domain.com","android, android-studio, chrome, firebase, javascript",0,Main auditorium,26,"Georgia Tech, UChicago","",Domain.com,parkjs814470,"Fort Hays State University, Georgia Institute of Technology - Main Campus, University of Chicago",3,kevinpark1217,FuadYoussef,juderosen
randomDomainName-Do Not Let Your Mom See This,https://hackcuv.devpost.com/submissions/113887-randomdomainname-do-not-let-your-mom-see-this,"Inspiration

When you are out on the internet, there are stuff that you don't necessarily want your parents, especially your mom to see...

What it does

Ideally, this website is going to be having feeds of random stuff that are not parents-appropriate.
But right now, it's just a random website that is rather appropriate for all-ages.

How I built it

I started with registering the domain name from domain.com, then i started to work on the webpage. I coded the html and css at first. Then I ran into the problem of animating the count-down effect on the 2nd page. So I asked for help on the mentor channel of Slack. Lauren Raddatz came over and helped a lot. After trials and errors of changing codes, switching css to scss and switching it back, We figured out achieving the desired result by modifying a code snippet of javascript online. So the whole webpage is then completed and ready to be published to the web. Then it came to the challenge of finding a web host for my site. I approached mentors on slack, got lots of great suggestions but at last decided to just use another github page to host the domain. Then it's the problem of figuring out how to link my githubpage ixianglll.github.io with the domain name that i registerd link . I had to refer back to another website that I have, which is another domain purchsed from google domain but also hosted through github. The procedure was a bit confusing for the domain.com domain, because there are more than 15 of additional DNS records whose functions that I don't know of. I had to try out adding different methods of adding type A DNS records and even change out its nameservers on domain.com's end. Besides, I had to go back to github to adjust the codes: to rename the 1st page to be index.html, going into all the codes to fix the link to the images, since they are not at the same designated folder as what's been saved on my computer. After the tiny changes were made. It is now working properly on the designated [http://donotletyourmomseethis.com]

Accomplishments that I'm proud of

Having successfully hosted a domain through github. And the domain name is really cool, isn't it!

What I learned

Keep trying, keep googling, ask for help.
It's always GOOD to fail, because you'll then fix the error and the final product more polished and less breakable.
If the code doesn't work, but you think they should. Give it some moment and let the magic of codes do its thing. After... let's say 30min, hit refresh the page, and BOOM, maybe it'll be working now!

What's next for randomDomainName-Do Not Let Your Mom See This

It will be fun to keep working on it and actually turn it into a fun website with lots of feeds coming in, either generated by the users or crawled from the website or handselected. There should a mechanism to filter out the contents that are ""appropriate"". 

EasterEgg

[https://pbs.twimg.com/media/D0Ju25cW0AAB5ee.png]
An octocat who is coding (in python)
",,http://donotletyourmomseethis.com/,,MLH: Best Domain Registered with Domain.com,"html, css, javascript",0,South side of the buildingand by the display screen,16,"University of Colorado, Boulder","","",xiang_luo,University of Colorado at Boulder,0
MLarketplace,https://hackcuv.devpost.com/submissions/113888-mlarketplace,"Inspiration

When a company is looking to enter the market of Machine Learning, their only real avenue of entry is to hire ML engineers.  This creates large barriers of entry for small businesses which cannot afford to spend millions on previously solved problems.

With MLarketplace we gather metrics on project use, and provide a simplified deployment process. So creators can use their expertise to create optimized and efficient solutions to common ML problems, which clients can then apply immediately to their own system.

What it does

MLarketplace is a website built on a flask server and mongoDB database in order to provide easy access to Machine Learning Solutions.  Developers can easily submit both pre-trained and un-trained projects to the database through a simple HTML form, and from there they have easy access to metrics on how their model is being used.  On the other hand, clients are met with project summaries including project name, developer name, and a readme describing the project.

If a project matches a user's needs, they can access the model using our MLarkeplace client library.  Which allows users to train models with their own proprietary data, use the pre-trained systems uploaded by developers, and most importantly, make predictions on their own system.

How we built it

MLarketplace is broken into three fundamental systems: the client side application where processing occurs, the server which stores our project information, and our library which works as the interface between the two.

Client Side: When a client requests a project from MLarketplace, that model is placed in a sandboxed process to protect both the client and developer's private information.  Each time a client asks a model to predict an answer or score it's accuracy, these usage metrics are passed-through to server counters.

Library: Each function on the database is required to operate on jsons to allow for language portability.  Clients can interface through each model's train, predict and score functions.  Train allows users to tailor models to their own application, predict attempts to extrapolate on a given test vector, and score takes known test vectors and classifications to provide easy accuracy calculations.

Server:  The server is built with flask and manages our mongoDB database. Each entry to the database stores developer information such as project and developer name, and  stores pointers to the model's true definitions and readme files.

Challenges we ran into

One of the major challenges we ran into was how to transport developer code without providing A) providing access to the source file to clients, and B) without putting undue strain on our database.  In order to resolve these problems we needed to both define external file systems and implement some basic sandboxing to prevent over-share of data.

Accomplishments that we're proud of

At the end of this hackathon we have created a solid proof of concept, which can interpret and distribute programs very efficiently and simply.

What we learned

This project involved a lot of web development, an area that none of us specialize in.  We have all gained a lot of experience working with flask servers and mongo databases, using forms to take input, and defining libraries to effectively distribute solutions.

What's next for MLarketplace

There are a couple areas that MLarketplace can benefit from continued development.  A more fully fleshed out user system would have to be created to allow for true enterprise solutions, as there is no account protection and verification currently implemented in the system.

Increasing our focus on security by finalizing the sandboxing of our client running systems.  This includes defining hard limits to processing power allowed to potentially malicious ""models"" and screening developer projects to ensure they meet our specifications.

We have laid the foundation for making MLarketplace truly language agnostic, but there is still work to be done in order achieve that goal.  In order to do this, we would have to transform out library into a server that allows for RestAPI requests.
",,https://github.com/SuyogSoti/MLarketplace,,MLH: Best Domain Registered with Domain.com,"python, flask, mongodb, bootstrap",0,Main Auditorium,44,University of Colorado Boulder for all,"",Domain.com,avan4780,University of Colorado at Boulder,2,stevmak,suso4455
Cookie Injection but with Real Cookies,https://hackcuv.devpost.com/submissions/113889-cookie-injection-but-with-real-cookies,"Inspiration

We wanted to create a video game that taught the critical skills of the cybersecurity mindset to 3rd-6th graders. The cybersecurity industry is already lacking 300,000 jobs, an early introduction to the cybersecurity mindset will allow society to manage this need. 

What it does

We created both:
a. An example game to play through the first initial levels of our game using the Godot Engine.
b. A white paper on the principles we applied and a development plan for the future. This white paper goes into detail
the future game and level design as well as the cybersecurity learning objectives for each level.

How we built it

We used the Godot Engine to build all of the characters and levels, starting from an initial example stage of a platformer. All assets and code are 100% MIT Licensed or in the Public Domain. We developed our game with this as a priority because we find it incredibly important for schools benefit from this game as much as possible, including analyzing the source code and making improvements as needed. The game is runnable in basically every format: Web, Windows, Mac, and even Linux. This will greatly benefit distribution and adoption.

Challenges we ran into

Neither of us had ever made a game before, so we where learning as we went along. We spent a large amount of time on just getting the dialog box to appear, then even more time trying to get a button that had an image (plus or minus sign) as it's texture. Once we got over those roadblocks and started to figure out how Godot organized and controlled assets, it was much more smooth (choppy) sailing.

Accomplishments that we're proud of

That we have a game to show and a lot of development planning at the end of this! We are both really happy about the knowledge we gained about game design, from 0, to being able to make a basic app. I am also proud that we created something we feel could be actually impactful. Cybersecurity education and outreach is very important both of us.

What we learned

Don't underestimate the time it takes to do basic tasks and learn new advanced software, like a game engine. This was really time and energy intensive, which means we weren't able to create all the examples that we wanted too. We also learned to appreciate some of the abstractions a game development engine provides. Using one editor, we were able to export functional copies for (almost) any platform.

What's next for Cookie Injection but with Real Cookies

Hopefully, Circadence and TCP are interested in this project, and we can discuss what future development and deployment will look like!

Links:

Please, read the white paper and at least look at a demo! Text me at 303-956-8904 or slack me at @Jake Vossen if you have any issues with any links or executables!!

Additionally, all of our source code is in GitHub with commit history going way back. However, we decided to keep the repo private in case TCP wanted to use it without releasing the source. Text me at 303-956-8904 with your GitHub username or email and I can add you!

Whitepaper PDF

Video Example MP4

Windows Executable

macOS Executable

Linux Executable Tested on Ubuntu 18.04
",,,,"Design, Build or Break Cyber Games for K-12 Education",godot,1,South hackrrspace next to windows,21,Colorado School of Mines,"","",jakevossen,Colorado School of Mines,1,fisherdarling
Recurtris,https://hackcuv.devpost.com/submissions/113891-recurtris,"Inspiration

This was just a silly idea that I had for a few years now where a game engine repeats recursively where you pop in and out of different layers until you can't handle it anymore. I decided to try this idea with Tetris to see how it might work with this, and whether or not the idea would actually be fun.

What it does

It's a Tetris game, but after you clear 5 lines the drop speed gets significantly slower and a new layer of Tetris is added in! You can jump to each layer of Tetris, pause layers, and try to survive! The goal of the game is to get as many layers deep as you can, but I did try to add a scoring system in as well.

Controls

Arrow Keys/WASD - Move the Tetris piece

Q/E - Rotate the Tetris piece

Enter - Pause the Current Layer - If you pause a layer, all subsequent layers are paused, so if you have 5 layers and pause Layer 2, you also pause layer 3, 4, and 5.

Escape - Go Back a Layer

Space - Go Forward a Layer

How I built it

I built it using Processing.

Challenges I ran into

Getting the recursing working was slightly weird to think about. Besides that, the development of this moved a lot more smoothly than I thought it would, and there were not many challenges, for better or for worse.

Accomplishments that I'm proud of

Honestly, I'm glad that this idea actually works, and that I find it fun in a way!

What I learned

Not a ton was actually learned from this, since this was a silly project; However, I learned how to make a Tetris game, and that the idea was more reasonable than I anticipated!

What's next for Recurtris

It would be cool to add more minigame modes to this, so instead of clearing 5 lines in a Tetris game, you may need to navigate your way through a short platformer game, or have some sort of simple stealth game to add some variety to it.
",,https://drive.google.com/file/d/1o6YwoNKBvCAt5mePw0ujY3FDLwMdGQKZ/view?usp=sharing,,"","java, processing",0,Main Hacker Space,16,University of Colorado Boulder,"","",PlatPlat48,University of Colorado at Boulder,0
SNAPstronomer,https://hackcuv.devpost.com/submissions/113892-snapstronomer,"Inspired by Snapchat stickers and satellites

What it does

Creates Elegant Snapchat stickers for satellites overhead

How we built it


Created a python script that


Receives GPS Data
Creates an observation point based on user location and time
Calculates satellite rise and set time
Determines if user is within rise and set time
For each satellite within view, calculates the azimuth and elevation
Find the satellites with the five highest elevations
For each of those five satellites, creates a unique sticker
Saves the sticker to the local directory

Created a website that


Demonstrates the capabilities of the app
Immerses the user into the vision of the app
Allows the user to directly download the .SDK to their android device
Encourages the user to provide feedback to the developers
Allows dedicated users to stay informed by joining a mailing list

Created an android app that


Demonstrates a classic user interface
Provides the opportunity to incorporate python scripts into snapchat stickers



Challenges we ran into


Read / Write permissions in android
Importing relevant python libraries


Accomplishments that we're proud of


Finds the 5 highest satellites in the sky based on latitude, longitude, and elevation
Creates images for each of those five satellites that gives information about them
Creating and updating a project seamlessly using git
The ""branding"" of the product to


Be unique
Complement the Snapchat brand
Show off the vision of and potential of the SNAPstronomer application



What we learned


Integrating Python scripts in Android applications is possible, but has limited feasibility
A website can be bought and published in under two hours
This concept would be better implemented
Photoediting in Python
The power of a diverse team
Libraries do not play nice
""Sleep deprivation is a state of mind""


What's next for SNAPstronomer


An android UI that better matches the SNAPstronomer brand
Add support for planets (and Pluto) along other celestial objects
An implementation that uses an API hosted on snapsats.space to avoid issues with running python on android devices
An ios app
Integrate concept directly into the Snapchat app 

",,http://snapsats.space,,MLH: Best Use of Snap Kit,"python, java",1,Main room,14,United States Air Force Academy,"",Domain.com,Error401-Unauthorized,United States Air Force Academy,0
PeasantSaber,https://hackcuv.devpost.com/submissions/113896-peasantsaber,"Inspiration

stuff

What it does

How I built it

Challenges I ran into

Accomplishments that I'm proud of

What I learned

What's next for PeasantSaber
",,https://github.com/acethespy/peasantsaber,,"","python, opencv",0,"Conference S127, also called Winter Park",Right side of the room when entering,UC Berkeley,"","",acetehspah,"",0
WillBikeForGame,https://hackcuv.devpost.com/submissions/113899-willbikeforgame,"Inspiration

Reasons rarely went marinated in my head. When I wanted to play video game, I couldn't think anything else but that.
With the notion that my parents could've convinced me to exercise more, when I was little; I wanted to propose an agreement-centric way to tell the young individuals to go out and ride bikes.

What I learned

Many functionalities those are provided by Firebase.
",,https://github.com/dlee67/WillBikeForGame,,"Kids + Bikes = happier, more attentive students in the classroom, MLH: Best use of Google Cloud Platform","kotlin, firebase, xml, android",0,Eldora,7,MSU Denver,"","",dlee67,Metropolitan State University of Denver,0
TrafficBGone,https://hackcuv.devpost.com/submissions/113903-trafficbgone,"TrafficBGone

A Program to Encourage Alternate Travel Times

This project exists because of the awful traffic seen on I-70 during the weekends. We noticed that people tend to leave all at the same time, causing massive backups on the highway. We believe that if we can get people to spread themselves out, we can reduce traffic, and potentially emissions due to less idling in traffic jams. To encourage people to use this service, we have implemented a reward system to encourage people to use the service.
",,https://github.com/TonyNagygyor/TrafficBGone_HACKCU,,"MLH: Best use of Google Cloud Platform, MLH: Best Domain Registered with Domain.com","python, html, smarty",0,Main auditorium,28,Colorado School of Mines,"",Google Cloud Platform,rstarritt,Colorado School of Mines,3,liamwarfield,TonyNagygyor,kalwaissi
Poop With Me,https://hackcuv.devpost.com/submissions/113913-poop-with-me,"Inspiration

Locating nearest restaurants is now simpler than ever, but what about amenities that actually require urgency? Our goal was to map and list out all locations of bathrooms, and allow users to rate/review them.

What it does

The app pulls up a map with markers across all nearest bathrooms along with their address and ratings. Upon clicking on each bathroom, users can choose to launch Google maps to find their way to there, or choose to review the location after they are done.

How I built it

Poop With Me is a native Android app built with Java and Android Studio. Our app calls the Google Maps API and uses Firebase as a backend to store all user-inputted data.

Challenges I ran into

API for easily finding nearest bathroom (https://amenimaps.com/) did not work, very rusty Java / Android skills.

Accomplishments that I'm proud of

We had fun and it works! 

What I learned

It's very helpfully to continuously build on working prototypes! Java is a toughie

What's next for Poop With Me

Scaling locating bathrooms to other amenities (ie. wheelchair accessibility), gaining access to datasets outside of Boulder.
",,https://github.com/calgagi/poop.withme/,,"","android, android-studio, java, google-maps, firebase",0,Main auditorium,NA,"Oregon State University, University of British Columbia","","",charmaineklee,"University of British Columbia, Oregon State University",2,aidangrimshaw,calgagi
Hack The Classroom!,https://hackcuv.devpost.com/submissions/113914-hack-the-classroom,"Inspiration

An interactive game systems where students get points for getting the 'flag' by solving puzzles and minigames

What it does

How we built it

Challenges we ran into

Accomplishments that we're proud of

What we learned

What's next for Hack The Classroom!
",,http://hacktheclassroom.com,,"MLH: Best use of Google Cloud Platform, Design, Build or Break Cyber Games for K-12 Education, MLH: Best Domain Registered with Domain.com","python, sanic, flask, firebase, javascript, canvas.js, domain.com, pygame, requests, html5, css3",1,Main Room!,1337,CU Boulder,"",Domain.com,SpencerHanson3141,University of Colorado at Boulder,0
task stack,https://hackcuv.devpost.com/submissions/113915-task-stack,"Inspiration

We dislike typical calendar views, and wanted a viewer that shows the most 

What it does

It displays calendars in a stack

How I built it

Backend: Python/Django
Frontend: HTML/CSS/JS
APIs: Google Calendar

Challenges I ran into

Typical backend/frontend communication bugs

Accomplishments that I'm proud of

Making a really good UI

What I learned

The google calendar API
Django
CSS Transitions

What's next for task stack

More features
",,,,"Big Data Analytics: Non-Obvious Web Traffic, Best Beginner Hack","django, python, css, html, javascript, google-calendar",1,auditorium,43,CU Boulder,"","",cope6961,University of Colorado at Boulder,1,HarrisonBolin
Attention Monitor - Distracted Driving Solution,https://hackcuv.devpost.com/submissions/113916-attention-monitor-distracted-driving-solution,"Inspiration

A member of our team researched a report on motor vehicle safety from the CDC (Center for Disease Control and Prevention) for a project while in grade school. The report highlighted disturbing facts about distracted driving such as every day approximately 9 people are killed and more than 1,000 people are injured in crashes that involved a distracted driver. In 2015 alone, 391,000 people were injured in motor vehicle crashes, and 3,477 people were killed in crashes involving a distracted driver. ""Distracted driving is driving while doing another activity that takes your attention away from driving. Distracted driving can increase the chance of a motor vehicle crash"" (cdc.gov). Our team became very cognizant of the growing number of incidents and preventable accidents due to distracted driving, and decided to develop an attention monitoring system that could be utilized in several different use cases to monitor and encourage more deliberate engagement while driving a vehicle or operating equipment.

What it does

Our attention monitoring system intelligently monitors a user's head and pupil movement while driving to track when the user is distracted. According to the CDC, visual and cognitive distraction are two of the leading causes of distracted driving, and can lead to serious injuries and loss of life. Our team has imagined several different use cases and implementations of this technology. Attention monitoring and tracking can be used for insurance purposes to determine how engaged and safe drivers are. Other examples include monitoring pilots, bus drivers, equipment operators, and testing the focus of student drivers while participating in Drivers Education. All of the use cases build upon the foundation of attention monitoring and tracking, and can be implemented in different ways to accommodate each use case. When people are driving a car, flying a plane, or operating a piece of motor equipment, it is important that their attention stays on the task they are performing. Once people ""take their eyes off the road"" and become distracted, injuries and fatal outcomes are significantly more likely to occur. Texting and driving is 6 times more likely to get someone in a car accident than drunk driving (icebike.org). The attention monitoring system provides a simple and effective solution to this preventable worriment by tracking the instances that an individual is distracted while driving/flying/operating. Our group has created a specific implementation of the attention monitoring solution designed for the use case of a parent overseeing the quality of their child's driving behavior.

How we built it

Our attention monitor solution and parent/child implementation was built using a Dell XPS 13 laptop running Linux, usb webcam, OpenCV, Twilio, RapidAPI, and Google Cloud. The webcam is used to stream video into the laptop, and the laptop utilizes OpenCV to track the movement of the user's head and pupils. Custom defined thresholds define when a user is considered to be ""distracted."" For instance,  it takes approximately 5 seconds to complete a lane switch (semanticscholar.org), and taking one's eyes off the road long enough to read a text message takes almost 5 seconds to complete (cdc.gov). 5 seconds is enough time to cover a football field at 55mph. If the child is considered to be distracted for more than 5 consecutive seconds, then they are given one strike. After the child gains three strikes, a text message is sent to their parent using Twilio letting them know that their child has been quite distracted while driving. The parent can choose to reply to that automated alert in order to further action. In addition to this, the parent will be able to access an online portal with information including real-time coordinates of the child, real-time location-accurate weather, and histogram representations of driver engagement. The back end was constructed in the web framework Django. Our solution has several diverse applications and markets, so we developed a user interface that is approachable and easy to understand.

Challenges we ran into

The greatest challenge we ran into was trying to create a live updated graph that updated every 20 seconds. One of the main issues was that Bokeh doesn't have clear documentation for their application server implementation in Django. Additionally, Bokeh requires its own port to run its server and with our Django setup we could not run two ports at once unless we set up an Apache server, and we did not have time to do so. After realizing that we could not take this approach we came up with an alternate way of presenting the graphs. We chose to export the graphs to a new html page every time there was new data. The drawback of this approach is that it requires the page to be refreshed every time new data is requested.

Accomplishments that we're proud of

Our team is proud of our collaboration, critical thinking, ingenuity, and the final product. Each one of us has a different technical background and expertise, and we were able to find a way to include everyone's expertise and work together through difficult challenges in order to create an attention monitoring system that tracks when a user is distracted while driving/flying/operating.

What we learned

Our team learned that coming across annoying challenges and bugs are typical to the development process. In addition to this, we expanded our experience in developing with APIs, Django, Geolocation, and SQL.

What's next for Attention Monitor

Our team wants to improve the image recognition system to recognize an individual's head and eyes in more challenging lighting conditions. We want to work on more custom implementations of the solution such as the Parent/Child driving scenario.
",,https://github.com/APChehadi/HackCU-2019-Attention-Monitor,,"RapidAPI Best OctoAPI Hack, MLH: Best use of Google Cloud Platform, Coolest Hack with Twilio, Dish Device Tracker, MLH: Best Domain Registered with Domain.com","python, opencv, json, twilio, google-distance-matrix, google-geocoding, haarcascade, sql, django",0,North Atrium,47,CU Boulder,"",Google Cloud Platform,PaperXLV,University of Colorado at Boulder,3,adampchehadi,tlincke125,Vikram-T
Inspiration,https://hackcuv.devpost.com/submissions/113917-inspiration,"inspiration

Inspiration is a project designed to help facilitate creativity in musicians and help them to create their own music. This is accomplished by creating a random chord progression generation program that attunes itself according to the users likes and dislikes via machine learning. All music is based of off chord progressions and half the battle of creating new music is to find new interpretations of old songs. This program does exactly that. By using different mutex algorithms and functions, we can create these new and unique chord progressions for each individual user. No two users are treated the same and will receive different songs according to their preferences.
",,http://musicalprompt.com,,"Splunk Challenge, MLH: Best Domain Registered with Domain.com","javascript, python, jupyter-notebook, html, css, scikit-learn, flask",0,Winter Park,31416,"ITESM, CU Boulder, USTHB","",Domain.com,alanbato,"ITESM, University of Colorado at Boulder",2,saidziani,thma4535
The Creeper,https://hackcuv.devpost.com/submissions/113919-the-creeper,"The Creeper

A choose your own adventure game intended to teach high schoolers different cybersecurity topics.

You arrive at a mysterious, large mansion. Before you enter the house, you open up a letter which reveals an invitation. Inside, it details that you have been invited to a very special release party of the newest invention by a big tech company. You enter and find many distinguished guests from varying fields of research, backgrounds, and celebrities. When the new technology is finally revealed in the main foyer, you realize that there is a problem. The evil genius has created a device that has trapped you and the other party goers in the house. The Creeper will slowly escape the game and infect your real-life computer... That is, unless you’re able to stop it. Utilizing the help of the industry experts at the party, you must explore the mansion, defend against the attacks, and launch counter attacks against the computer in order to stop the device.
",,https://github.com/jackspicer1229/HackCUV,,"Design, Build or Break Cyber Games for K-12 Education, Best Beginner Hack","python, pico-8",1,Main Auditorium,25,"University of Colorado, Boulder","","",sousheel,"University of Colorado at Boulder, Univeristy of Colorado Boulder",1,jackspicer1229
Virtual Xylophone with Gesture Control over the cloud,https://hackcuv.devpost.com/submissions/113920-virtual-xylophone-with-gesture-control-over-the-cloud,"Inspiration

We were inspired by the need to play any instrument over the internet with good audio quality while preserving the real time experience. 

What it does

It uses touch sensors to detected the notes and sends the data of which note has been touched. This data is being used to reproduce the sound on the speaker using python script.
Also, a gesture control system is integrated which gives control of whether the song is to be recorded, when to stop recording and when it has to be replayed.

How we built it

We used three photon boards and a leap motion sensor.

Virtual Xylophone system:
This employs a photon board and it detects the note touches and sends this data to the end user. This data is transferred over the internet which enables any number of end users to listen to the music. Any number of users can listen by subscribing to the channel

Gesture Control System:
This employs a leap motion sensor and a photon board. The leap motion data is parsed using a python script and is posted onto a serial terminal for the photon board to subscribe to. 
The gestures inputs help to start recording, stop recording or playback the song that has been recorded.
The photon board is used to transfer the gesture command over the cloud

User Speaker system:
This employs a photon board and runs a Python script.
The photon board receives the cloud data and produces the sound of the notes corresponding to the data received from the virtual xylophone system. The Python scripts helps in producing the sound of the notes and also to record or replay the music based on the commands received from the gesture control system

All the individual systems communicate over the cloud

Challenges we ran into

Accomplishments that we're proud of

What we learned

We learned how to integrate a gesture control system. Also we learned how the data  are being sent over the cloud.

What's next for Virtual Xylophone with Gesture Control

We can further improve it to other instrument being capable of making it into virtual
",https://www.youtube.com/watch?v=akkQxQ2NVq0,https://github.com/steveantony5/Virtual-Xylophone-with-Gesture-Control-Over-the-Cloud,,"Best Hardware Hack, Best Beginner Hack","python, gesture-control, c, wifi-cloud, three-photon-boards",1,Classroom opposite to LoveLand room,Classroom,University of Colorado Boulder,Leap Motion,"",steveantony5,University of Colorado at Boulder,2,sanjuprakashk,srinath-95
BlockStory,https://hackcuv.devpost.com/submissions/113921-blockstory,"Inspiration

We wanted to try something completely new, and decided on trying to build a decentralized application. With this, we wanted to build a platform where users collaborate to make something special, all the while keeping the contributions secure and from verified sources, and to avoid spamming and profanity. 

What it does

BlockStory is a collaborative storytelling platform, where users can use their Ethereum to create new stories or contribute to existing ones, in order to create special and secure stories, free of spam, profanity, and from verified sources. The fee allows the smart contract transactions to be mined and verified before being added to the blockchain. This platform could be expanded to a wide variety of collaborative mediums.

How we built it

The project was built using Smart Contracts with Solidity, on the Ethereum Blockchain. We used the Truffle framework for the Smart Contracts. A local blockchain is hosted with Ganache, creating fake accounts with large amounts of Ethereum for testing, and Metamask for routing the Smart Contract transaction requests to the Ganache server. The frontend was built with React.js and Semantic UI.

Challenges we ran into

Since this was our first time using Blockchain technology, we ran into challenges with setting up Truffle, Ganache, and Metamask. Since string manipulation isn't included in Solidity, we needed to find ways to check the texts for profanity, which was another challenge. Finally, we ran into issues linking the React frontend with the Smart Contracts.

Accomplishments that we're proud of

We're proud of finishing a Blockchain project that is functional during the hackathon, having known barely anything about the technology before the event. 

What we learned

We learned about Smart Contracts, the Ethereum Blockchain, Solidity, Truffle, Ganache and Metamask.

What's next for BlockStory

Adding validation from external sources such as text analysis would improve on our current text analysis in the Smart Contract for the stories.  A voting system to approve and validate bits of text into the stories would make the entire platform more collaborative as well. We can also expand it to different forms of media or things to validate such as collaborative HTML/CSS code.
",,https://github.com/tehblasian/blockstory,,"Twisted hackers, Best Smart contract usage","truffle, ethereum, solidity, blockchain, react, ganache",0,Vail,50,Concordia University,"","",zacharybys,"",1,tehblasian
Unhackable: Cyber Security Learning Platform Concept,https://hackcuv.devpost.com/submissions/113922-unhackable-cyber-security-learning-platform-concept,"Inspiration

Due to a shortage of cybersecurity talents, we aim to find a solution to get the next generation to learn about the relevancy of cybersecurity threat in their daily life and in the world around them in order to inspire the want to pursue a career in cybersecurity particularly those students in disctrict that may not previously have the opportunity to learn this topic.

What it does

Unhackable is a concept for a platform for students and educators to access interactive learning content regarding cybersecurity concepts. Educators will be able to access lesson plan and instructional materials to aid their teaching. Students and access interactive learning modules which serve as learning material and learning incentive. 

How we built it

Unhackable module's demo is created using GameMaker2 

Challenges we ran into

The biggest challenge is certainly the design elements of this project. Making an educational game is very different than simply making a game. It was difficult to try to think about all the needs of our targeted demographic. Trying to convey informational in a more graphical way was also very challenging as we have to also consider how can we make the material more engaging. We have to keep our attention on the targeted audience not what convinence for the programmers. 

We are not very experienced with GameMaker application nor do we have much art/ graphical ability so this is a very new experience for us.

Accomplishments that we're proud of

We are proud of a concept that was able to utilize everyone's skill set and target audience-centric and we also happy to be able to create a working prototype from software than we have never used before. 

What we learned

As much as technical skills are important it is only as good as the idea that you can generate. Although the demo was not constructed of very complex algorithms or technologies, we put a lot of energy into researching the targeted audience and how to better convey high-level concepts in a way that everyone can understand. From experience, the high school crowd is not the easiest to please. 

What's next for Unhackable - The Cyber Security Learning Game

To complete one fully complete module that is classroom ready.  
",,,,"Design, Build or Break Cyber Games for K-12 Education, Best Beginner Hack",gamemaker,0,Main,38,"University of Colorado Denver, Metropolitan State University","","",ktprayoonsuk,University of Colorado Denver,1,oneofuser25
Reactstrap Playground,https://hackcuv.devpost.com/submissions/113923-reactstrap-playground,"Inspiration

We were originally wanting to do something with RapidAPI, but could not get that working in time, so we pivoted and created a little tutorial/guide through some of the features of react.

What it does

This webpage contains a few tools for someone to ""customize"" their React webpage, including a slider for heading size and a color wheel to choose their background color.  Each of these features also updates real-time to show what code the user would have to write to achieve the same outcome.

How we built it

We started from scratch using react's create-app, and built in dynamic and static features by hand from the ground up.

Challenges we ran into

Since we pivoted a bit late into the hackathon, we scrambled for a bit trying to come up with an alternative idea.  Also, Javascript and React had their own challenges for us, since we are mostly novice coders.

Accomplishments that we're proud of

We actively communicated and pushed our work through GitHub without breaking anything.  We finished with a product we are generally proud of generating in roughly 15 hours.  This project could be expanded into many industries and the concepts could be reused for other programs.

What we learned

24 hours is not a lot of time.  Communication is paramount to success.  Having an idea coming into a project does not mean it will stay.  Versatility is easier to say than accomplish.

What's next for Reactstrap Playground

Unfortunately, this hackathon might have to be the lifespan for this project, as we are all busy in our schooling and career searches.
",,https://github.com/masforce/HackCU,,Best Beginner Hack,"intellij-idea, react, javascript, html, css, npm",1,Main auditorium,46,Colorado State University,"","",ncz0,Colorado State University,1,elavertu9
Mocking Bird,https://hackcuv.devpost.com/submissions/113924-mocking-bird,"Inspiration

We wanted to build something that lets companies use social media to improve their products and attract more potential investors.

What it does

Users type any search item in box and the app summarizes people's sentiment towards this topic in live stream mode. This is mainly geared towards public relations officers that want to analyze people's sentiment towards their company in real time. 

How we built it

The frontend part of app uses Java. The backend is written in Python and uses Tweepy (python wrapper for Twitter API) and text sentiment analysis method api. We collect 20 tweets in real time, and then run sentiment analysis for all the tweets. Then the interface shows the summary in a user friendly way.

Accomplishments that we're proud of

We were able to learn and effectively use APIs within just a few hours of the hackathon. 

What I learned

We learned how to work together as a team. We also learned to use APIs that we had no idea existed a couple of days ago!

What's next for Mocking Bird

1) Letting users collect tweets within a certain time interval to see changes in public perception.

2) Adding visual aspect to the summarization part.

3) Enable voice commands for topic searching.
",,https://github.com/MoritzHayden/HackCUV_TweetAnalysis,,"RapidAPI Best OctoAPI Hack, Coolest Hack with Twilio, Best use of Twitter API","python, java, tweepy, text-sentiment-analysis-method, twilio, rapidapi",0,North atrium,48,University of Wyoming,"","",DamirPulatov,University of Wyoming,2,KrishnaSaiChemudupati,MoritzHayden
Cyber Snake,https://hackcuv.devpost.com/submissions/113925-cyber-snake,"1. Game Title

Cyber Snake

2. Summary

The Elevator Pitch
This game will make a 10-13 years old kid play for hours having fun while he is learning basic cyber security aspects. Nothing is what it seems to be on real Internet 

Theme/Genre
Modern arcade game

Audience
10-13 years old kids

Game Flow Summary
Cyber Snake is a brilliant endless arcade game in which you take control of a snake. Your snake can only hit the objects that corresponds to the answer of the question game. When a correct object is hit, the user will earn 5 points. Those are the different types of challenges while playing:
Cryptography: A word is said to the user. If the word to encrypt is , the user must hit those word objects that its letters are in the right in the alphabet. Like  for . So, any “d” is transformed to an “e” and any ""a"" is transformed to “b”:

ABCDEFG
|.      |.
BCDEFGH

In order to be easy at the beginning we could use two letter that are very close together in the alphabet. As difficult is the lever, the difficulty can increase by adding more letters, more displacement and larger words.

Passwords: Word objects appear with passwords in it.User must avoid easy-to-hack passwords such as “hello” “12345” “catsandogs”, and hit the objects with difficult passwords. Difficult passwords of each level will be:
Easy: Those that have lower and capital letters.
Medium: Those that have numbers and lower and capital letters.
Easy: Those that have numbers, lower and capital letters and special characters

Authentication: It will be shown an emoji. Then, the user will have to avoid all the emojis that are not that one, and catch the one. 

An increase to the difficulty, we could ask security questions to the user, 4 responses could be provided as 4 objects and the user cannot avoid not hitting any of them. Two security questions could be asked:
What was your last score?
What was your highest score?

Back-up data: Used as a checkpoint. If you don’t catch the back-up data object a message will be shown, notifying that the user that data can be lost in case of emergency, or a Game Over. In the case the user hits the Back-up data object and then he dies, he will restart the game in the last Back-up data object hitted. So he doesn’t have to start from the beginning. 
Firewall (not designed): Two types of emojis will approach the user. One of them will be a “known access” and the other one a “not-known access”.

3. Educational Design

Learning Objectives
Every time the user makes a  bad decision, we explain them why it was a bad decision and so we explain them the cyber security theory behind that game mode. This theory difficulty and completeness of the method will increase when the level of the game is higher.

This theory will include the following points:
Cryptography
Difficult password generator
Authentication
General Cyber Hygiene: Back up data
Firewall

Puzzle/Challenge Structure
Every time the user completes a level, the difficulty increases and the feedback given is even more complex.

The main idea is to start with very basic cyber security concepts at the beginning levels and make them more difficult once the player reaches higher levels.

Play Flow
Images to explain the play flow

4. Storyline

Setting
They user will be able to select between Easy, Medium and Advance levels.

Apart of increasing the difficulty of the levels, the snake will move faster so the user will have less time to think about the correct solution.

Another setting is that the user can choose to play any random mode of game or to select an specific one. 

Characters
The main character is a “snake” which will be the one that the user will control. 

5. Game Play Mechanics

Controls
The snake will move Left/Right as the user scrolls his finger left/right the screen.
There are going to be some levels where the user will have to “kill” some bad guys shooting balls.

Levels
For the MVP  the user could select between Easy, Medium and Advanced. And select a random game of mode or an specific one. 

For the next iteration, there could be an “infinite” number of levels. Starting at level 0 where the cyber security knowledge will be very basic, every time the user finishes a level, the difficulty of the challenges will increase, the learning feedback will have more technical aspects and the snake’s speed will increase so the user will have a shorter time to think.

Technical Requirements:  AI, Art Assets
It will be implemented with 2-D Unity. No AI needed, just easy programming skills on Game development. Art Assets may be needed to increment user experience. UI is very important for kids to get engaged on the game. 

It is known that 10-year-old kids focusing is not stable, so it will have to be implemented colorful and with trendy music played on. 

6. Scoring Method

For the MVP, in the main screen appears the last score and the highest score for the game of mode selected in the Settings.

For the next iteration, as we will have levels the score will increase proportionally to the number of levels the user survives playing. The further you get, the more points you have. If some “missions” are completed, such as catching the correct words, some points will be awarded too.

There will be a global ranking and a friends ranking. This will engage the user to keep playing until they reach the top of the ranking. You can connect with facebook, instagram and phone book numbers (as kids of this age may not have an account to those social networks), so friends competing will be one of the main points on kids to be engaged.
",,https://docs.google.com/presentation/d/1Znw4TZrY3kyuhnIoqHk1wHGy2afyNW5Ynh1sAaANXxo/edit?usp=sharing,,"Design, Build or Break Cyber Games for K-12 Education, Best Beginner Hack","",1,Main auditorium,36,uccs,"","",ericvelazquez,University of Colorado at Colorado Springs,3,brunoibez,lluisumbert,damiafuentes
HackCUV2019,https://hackcuv.devpost.com/submissions/113926-hackcuv2019,"HackCUV2019

Contributions from:


Nadiv Gold Edelstein:    Backend
Zack Jorquera:    Hardware
Ria Thakker:    Frontend
Ian Jorquera:    Embedded Systems




CHALLENGES
REQUIREMENTS



Best Hardware Hack
Best hack using hardware.


Dish Device Tracker
Track an object (thing) as it moves through any points on the CU Campus, visualize or display the data in a meaningful way, solve a consumer pain-point or create some additional value for society.


Splunk Challenge
The team who processes and makes sense of the most unstructured data will win!


MLH: Best IoT Hack using a Qualcomm Device
Use a Qualcomm device, like the Dragonboard 410C, in your IoT project.


Rapid API
use 2 or more APIs through the RapidAPI platform. It can be any of the 8,000+ APIs on the marketplace, the more APIs you use the better! Bonus points for creating and exposing your API publicly or privately using RapidAPI to add authentication, billing, analytics, and more. Important URLS: docs.rapidql.com, docs.rapidapi.com, provider.rapidapi.com.


Twilio
combining various of our own APIs, use our APIs in ways we haven’t seen before or by solving a great problem with them



THE PACKAGE PROTECTOR

Use Protection™

Ever had an expensive package destroyed in the mail? Probably. It's happened to all of us at some point.

But now, with the advent of inexpensive microcomputers like Arduino, Raspberry Pi, and Qualcomm Dragonbard 410c, companies can provide a near-omniscient view of your package from the moment it leaves the warehouse to the moment it shows up at your door.

In the future, you can log in to a website and get minute by minute updates on your package's condition, but for now, we're using Twilio's API's to send you critical information as it occurs and Rapid's APIs to give you premium access to maps so you can check the exact location of your important goods.

To prove we're the best, we check our data against UPS, DHL, FedEx, and USPS, and with the ability to get detailed statistics about your order delivered direct to your phone, filing damaged or lost package claims is dead easy.

The microcomputer will come stocked with a variety of sensors including:


GPS for accurate tracking of your package. Out with tracking numbers and in with real-time updates
Accelerometer to let you know if your fragile package had and unexpected bumps or bruises in transit
Water sensor in case of the unfortunate event of dropping your package in the ocean


We care deeply about your package, and you should too. There's no better way to ensure your package is insured and lives up to the high shipping costs you pay.
",,https://github.com/ZackJorquera/HackCUV2019,,"MLH: Best IoT Hack using a Qualcomm Device, RapidAPI Best OctoAPI Hack, Best Hardware Hack, Coolest Hack with Twilio, Best Beginner Hack, Dish Device Tracker, MLH: Best Domain Registered with Domain.com","c++, python, javascript, html, css",1,"Table 11, big TV area",11,CU Boulder,Dragonboard 410c,Qualcomm,jorqueraian,University of Colorado at Boulder,3,ZackJorquera,riathakkar,Borab3
HitMemeUp,https://hackcuv.devpost.com/submissions/113927-hitmemeup,"Inspiration

We wanted a handy way to get memes (like giphys on slack) and we decided the most convenient way to do this would be to send query to a server over text and receive images/gifs back.

What it does

It is very simple, text a query for an imgur image, receive a random image that matches that query.

How we built it

We used a flask backend in a docker container on a remote server to handle requests from Twilio and retrieve image URLs from Imgur.

Challenges we ran into

Coming up with a valid idea was a challenge, we wanted a project we could finish and something that would be interesting and useful; hence the simplicity. In terms of actual development, we had issues retrieving some images because they where embedded in an album of one image. In order for the app to actually send images, as opposed to links to images, we had to dig through the Imgur api and combine a few api calls in order to retrieve the image URL.

Accomplishments that we're proud of

Going from concept to ""finished"" project. I think its easy to come up with a big grand idea and after 24 hours have that cut back to the bare working minimum. 

What we learned

We learned how to use Twilio and how powerful it can be. We also learned how to take our vague idea and polish it out.

What's next for HitMemeUp

We would like to expand it so we can send memes to other people and also pull memes from other sources.
",,https://github.com/imanoreotwe/HitMemeUp,,"RapidAPI Best OctoAPI Hack, Coolest Hack with Twilio","flask, imgur, twilio",1,Main Auditorium,42,Colorado State University,"","",imanoreotwe,Colorado State University,2,myou11,wstnmssr
BillHub,https://hackcuv.devpost.com/submissions/113930-billhub,"Inspiration

I wanted to stay more up to date with current US legislation and bill proposals.

What it does

BillHub allows users to identify which representatives views align with their values the most and allows them to follow legislation that may affect their everyday lives.

How we built it

We built the web app utilizing the MERN stack with a responsive frontend.

Challenges we ran into

Data transfer to/from MongoDB and working with varying API data structures (SendGrid/CivicFeed). Also dealing with merging conflicts since we didn't delegate tasks as efficiently as possible.

Accomplishments that we're proud of

Building a functional full stack application in 24 hours.

What we learned

How to utilize SendGrid and how to better interpret API documentation.

What's next for BillHub

Making a mobile application using a hybrid framework like Ionic 4 or React Native. Integrating Twilio for real-time text updates on legislation.
",,https://github.com/Dillonpyle/hackCUV,,"RapidAPI Best OctoAPI Hack, Coolest Hack with Twilio","javascript, css, html, react, express.js, mongodb, sendgrid, rapidapi, node.js",0,Winter Park,8,General Assembly,"","",TylerN7,"",1,Dillonpyle
"Song: ""No Whales""",https://hackcuv.devpost.com/submissions/113931-song-no-whales,"I don't expect to win anything with this, I just had a great time

my Spotify is: https://spoti.fi/2GZUWZA
",,https://soundcloud.com/tropiguay/no-whales,,"",ableton-live,0,Eldora,4,University of Colorado Boulder,"","",alma7479,University of Colorado at Boulder,0
Data-Mining Clickstreams,https://hackcuv.devpost.com/submissions/113932-data-mining-clickstreams,"Inspiration

We had an interest in data science, and Oppenheimer Funds had a large set of data that needed analyzing.  

What it does

The project attempts to organize seemingly unrelated clickstream data into a group of clusters that should cover roughly 80% of web traffic to oppenheimerfunds.com  

How we built it

We used python and Unix terminal commands to break down the data into smaller groups that were then funnelled into the Google Cloud platform to produce graphs.  

Challenges we ran into

The data sets produced graphs that were too complex to be generated on a local machine. We needed to utilize the computing provided by Google's Cloud computing to generate some of the graphs.  

Accomplishments that we're proud of

We succeeded to graph a number of the data sets we produced.  

What we learned

Never try to export a directed graph with 3 million nodes to a .dot file locally.
Gained a much greater familiarity with graphing packages in Python.  

What's next for Data-Mining Clickstreams

Due to the results we achieved, no future projects are planned. The conclusions we have drawn may be used to potentially reshape the current Oppenheimer website, however that is the extent of the usefulness of our findings.
",,,,Big Data Analytics: Non-Obvious Web Traffic,"python, google-cloud, pandas, networkx, bokeh",1,Main auditorium,39,CU Denver,"",Google Cloud Platform,morichikarinnosuke17,University of Colorado Denver,2,codygardner,Benstanton
TransparentHouseContract,https://hackcuv.devpost.com/submissions/113934-transparenthousecontract,"College students only receive information that landlord provides thus they get swindled 

Inspiration

We have been victim of the backdoor and shady landlords and bad properties. I should not have been living in home where the lead paint was covered up, or where the windows would not open in room leaving us with no fire escape. Landlords use unethical methods because they know that college students need cheaper housing. But they should not have to find out bad parts of places that they live. We want to bring transparency to the college renting market. We want to know what the status of our rental properties before we move in. We want to know what other renters have paid so we know that they market is fair. We want to see the true status of the house before and after every renter has moved in and out. 

What it does

We built a Soildity smart contract to not only pay rent every month to the landlord but keep all information transparent. 

How we built it

We used Remix an online solidity complier to not only test on a mock blockchain with fake ether

Challenges we ran into

The Moving parts in a contract. We have limited experience in Soildity so we are still trying to understand how object interact with a contract. We struggled with how to make everything viewable in a very functional way

Accomplishments that we're proud of

We wer brave enough to keep going after all of our failed ideas and challenges. 

What we learned

Soildity is difficult. It is hard to figure out how to keep track of objects but also not over spend the gas money that each user would need to interact with the contract

What's next for TransparentHouseContract

We would love to add more functionality. It would love to be able to have a logical flow of what the property looks like, keep track of damages, repair and inspections.
",,https://github.com/crgoldstein/TransparentHouseContract,,"Best Smart contract usage, Best Beginner Hack","soildity, blockchain, remix, dapp, ether, crypto",1,Main Auditorium,41,Colorado State University,"","",crgoldstein,Colorado State University,0
youtube-comment-analysis ,https://hackcuv.devpost.com/submissions/113936-youtube-comment-analysis,"Inspiration

We wanted to provide content creators with a tool that gives them a more in-depth understanding of their communities reception of their videos. A simple like and dislike bar doesn't accurately model the views sentiment of a video, and going through thousands of comment manually is incredibly inefficient.    

What it does

We are able to return a score on the scale of -1 to 1 that represents the sentiment of the comment section. The program also generates a percent toxicity value that models the percent of negative comments, and a word cloud or frequent words and phrases in the comments.

How we built it

We used the Python textBlob natural language processing library for the sentiment analysis. We used the Youtube API for pulling comment threads on videos The backed of the website is managed with django and flask container. The front end is a HTML webpage.

Challenges we ran into

Learning how to uses the YouTube API was difficult. Css

Accomplishments that we're proud of

What we learned

What's next for youtube-comment-analysis
",,https://github.com/kasplat/youtube-comment-analyzer,,"Splunk Challenge, Big Data Analytics: Non-Obvious Web Traffic, MLH: Best use of Google Cloud Platform, Best Beginner Hack","python-textblob, jinja, html, youtube, flask",0,Main Auditorium,dunno,"Rochester Institute of Technology, CU Boulder","","",Kvenkatram,"University of Colorado at Boulder, Rochester Institute of Technology",1,kasplat
CAN Theft Auto: Blockchain,https://hackcuv.devpost.com/submissions/113938-can-theft-auto-blockchain,"Inspiration

Modern computer systems rely on logging events to keep track of actions that have taken place on a system. However, these logs aren't secured in any way, so if an attacker compromises a system they can modify those logs to remove any traces of their presence. This was an issue in the attacks on the Ukrainian Power Grid, where logs were deliberately modified by attackers to hide their tracks.

What it does

Our solution was to create a blockchain of log contents, so the information could be verified and any changes could be flagged. Our blockchain logger takes in log data and creates a blockchain out of it by hashing the data to the appropriate difficulty (in our case, 24 bits of zeros), posting the hash and our RSA signature of the has to our website, and publishing the hash, time, and nonce to the Etherium Ropsten Test Network Chain. This means that even if our website is compromised, the Etherium network will have a verifiable copy of the data.

How we built it

We got our data by reading actual vehicle logging information from the GeoTab API. We used that information to build a blockchain where each ""block"" consists of three values: the hash of the previous block, the data we want to have a verifiable record of, and a Nonce, or random number. We published this information to the Etherium Ropsten Test Network Chain using the web3 Python library and a smart contract that we wrote using Solidity, and we also wrote it to a local database. We used this database for our website, which can display the information in an easy-to-understand way.

Challenges we ran into and accomplishments that we're proud of

Writing a Smart Contract in Solidity was surprisingly difficult, partially because Solidity is an unfinished language. There were times when we had to work around Solidity having the framework for implementing a feature but not having implemented the feature yet. Additionally, learning to communicate with our Smart Contract via Python3 was complicated, and it was a very proud moment when we got it to work!

Signing hashes and getting JSON to export the signatures of data was also a challenge, but now we have multiple authentication methods to verify data is correct!

What we learned

We have never written a Smart Contract before, especially not one in Solidity. Trying to wrangle the language into doing a fairly simple task has given us a lot of respect for those who write the complex applications that are deployed to the real Etherium chain.

What's next for CAN Theft Auto: Blockchain

We'd like to flesh out the smart contract we wrote more, and include more data, such as the signature of the hash. We would also like to get real-time data from geotab, but because the car the GeoTab device is in isn't always moving we just used sample data for this project so we had data at-will.
",,https://github.com/aowsenek/NV_BlockChain/,,Best Smart contract usage,"python, solidity, ropsten-test-network, flask, rsa, sha-256, geotab, json, etherium, html, css, blockchain, logs, blood, sweat, tears",0,Desks in the hallway outside of Winter Park,End of the table closest to hallway,CU Boulder,"","",aowsenek,"University of Colorado, University of Colorado at Boulder",1,apccurtiss881
CapSense LED,https://hackcuv.devpost.com/submissions/113939-capsense-led,"What if I made LED's controllable by touch?

Touch sensors are in our everyday life, but with a little work, and a couple of micro controllers, I figured I could add some flare to the ordinary touch sensor. There are only three components: A low power consumption board called the Pearl Gecko, an Arduino Uno, and a strip of LEDs.

What it does

The capacitive touch sensor is housed on the Pearl Gecko. Once it senses a touch, it sends this information via GPIO to the Arduino (Either 0 for no touch, or 1 for touch). The Arduino then takes this information, and drives the LED's accordingly. The buttons on the Pearl Gecko give different types of lights to display!

How I built it

The Pearl Gecko is a low power consumption board, so by default most devices on the board are powered off. In order to turn a peripheral on (like the touch sensor), I had to: enable the peripheral's clocks (in many cases, one peripheral runs off of many different clocks), route the connection, and finally initialize the peripheral. 

Now that the sensor is enabled, I need to establish that a touch has occurred. The sensor has a register that stores its data at all times(0x0 for no touch, and around 0x4050 for a touch). If a touch occurred then the GPIO pin would be set to high. 

In order to have more fun I decided to add push button functionality as well that changed what color and style of LEDs would be displayed.

Moving to the Arduino, the LEDs are driving using the famous FastLED library. This gave me a skeleton structure to code the LEDS off of, as well as well defined values for colors. 

There was one output pin for the LED data, and 3 input pins to read in the Pearl Gecko Data.
There is an interrupt on one of the pins, in order to have stacked LED display. 

Challenges I ran into

The Pearl Gecko uses code that embedded software to satisfy its low power consumption. The Arduino Uno is a board that is higher level. Making these two talk to each other was very difficult at times. I originally wanted to use SPI, UART, or I2C, but I figured that a simple hi-low communication would be the best when talking between two different boards. On/Off is the universal language of the computer world!

Accomplishments that I'm proud of

The response is almost immediate
It works!
It only draws ~5mA

What I learned

*Making different micro controllers that run off of different languages talk to each other is a very intricate process. *

What's next for CapSense LED

I want to piggy back off of my 5mA comment before, if this system only draws that much current here is what is in store with this idea:

Specific board design for this idea
If I could isolate all of the logic onto one board, the power draw would be even less, through some math about ~3mA average. This would allow the addition of flare to any touch sensor system on the market, without impeding the circuitry at all. Why?

3mA is very negligible. 
How negligible?

An iPhone 7 battery has a 1960mAh battery. Meaning you could run this circuitry for 653 hours drawing 3 mA.
",https://www.youtube.com/watch?v=jPeYxG0V-KY,,,Best Hardware Hack,"c, led, gpio, capacitive-touch, leds, arduino",0,Vail,3,University of Colorado at Boulder,"","",kurtsprague,University of Colorado at Boulder,0
Will you die? A weather experience,https://hackcuv.devpost.com/submissions/113940-will-you-die-a-weather-experience,"Inspiration

it was really cold out

What it does

finds your location based on an ip address api and uses a weather api to get the temperature and conditions 

How I built it

Using python and two APIs

Challenges I ran into

Neither of us had touched either python or an API before so all of that had to be learned on the fly

Accomplishments that I'm proud of

We could produce a product out of zero background knowledge whatsoever

What I learned

How to use APIs in python and how to interpret that data

What's next for Will you die? A weather experience

At some point I would like to add a user interface of some type
",,https://github.com/ParkerMorr/HackCU/tree/master,,"",python,0,Main auditorium,There is no number...,University of Colorado,"","",PorkyPenguin,University of Colorado at Boulder,0
SIDE KICK,https://hackcuv.devpost.com/submissions/113942-side-kick,"Inspiration

We were looking into what incentives attract students to events, and the more research we did, the more we knew that students are facing with an issue regarding time management and free food or fun activities don't bother them much. So, we came up with SideKick an intuitive scheduler.

What it does

SideKick is an App that gathers info from Canvas and mycuinfo and builds a schedule around students preferences and other extra-curricular activities while promoting good study habits. 

How I built it

We made it using react native, Javascript and node.js, With expo and text editor, also Figma for our prototype.

Challenges I ran into

Being entirely new to the react native development platform, and with not much prior experience, we were able to create a test app, which works as a to-do list to complete tasks.

Accomplishments that I'm proud of

We are proud of how far we have come with a very little understanding of javascript.

What I learned

We learnt how hard it is to learn a new language overnight and how much info is available online to continue working on an idea.

What's next for SideKick

We are planning on expanding and do further development for the next couple of months, and go through NVC 11 and try for Catalyze CU.
",,https://github.com/sidekick-learning/App-Version-1,,Best Beginner Hack,"react-native, atom, sublime-text, javascript, expo.io, node.js",1,Main auditorium,no idea,CU boulder,"","",avinashuddaraju,"",0
Pancake Post,https://hackcuv.devpost.com/submissions/113943-pancake-post,"Inspiration

We wanted to build an extension and a web page that presented a specific forum and chat on a different webpage.

What it does

Pancake Post is a website and an extension, and presents the user with a forum page and a chat page to connect them with other users on the same website.

How we built it

We used browser extensions for the front-end and flask socket-io for the back-end. 

Challenges we ran into

It was hard to get the web sockets to communicate. 

Accomplishments that we're proud of

We were finally able to get the sockets to work and implement the real time chat.

What we learned

We learned more about flask socket-io and how to communicate between front-end and back-end using Jinja2 and JavScript. We were able to containerize our project and share with the working environment with our team members. Additionally, we learned how to host on Google Cloud Platform.

What's next for Pancake Post

We may want to implement supporting inserting images in the forum posts and chat. 
",,https://github.com/joshf26/Pancake-Post,,"MLH: Best use of Google Cloud Platform, MLH: Best Domain Registered with Domain.com","python, flask, jinja, javascript, html, css, socket.io, postgresql, google-cloud",0,Breck,5,University of Colorado at Boulder,"",Google Cloud Platform,TiffanyVPhan,University of Colorado at Boulder,1,joshf26
PROJEKT JUICE 2088 VR: 358MECH/fate,https://hackcuv.devpost.com/submissions/113944-projekt-juice-2088-vr-358mech-fate,"Inspiration

11 years ago, our world was irreparably changed. The events of The Occurrence have long been shrouded in layers of corporate secrecy, but everyone alive knows the importance of that world-shattering discovery - JUICE. Long had humanity searched for a source of endless power, but it was not found among the gilded halls of alchemy. This holy grail was found in a far humbler place: The Bar of The Multiverse. The knowledge of Juice, long dormant, resurfaced in 2077. Our search for unlimited energy has ended. The mech wars have just begun.

Our Philosophy

A spectre is haunting Europe--the spectre of Juice. All the Powers of old Europe have entered into a holy alliance to
exorcise this spectre: Pope and Czar, Metternich and Guizot, French Radicals and German police-spies.

Where is the party in opposition that has not been decried as Juicy by its opponents in power?  Where is the Opposition that has not hurled back the branding reproach of Juice, against the more advanced opposition parties, as well as against its reactionary adversaries?

Two things result from this fact.

I.  Juice is already acknowledged by all European Powers to be itself a Power.

II.  It is high time that fans of Juice should openly, in the face of the whole world, publish their views, their aims, their tendencies, and meet this nursery tale of the Spectre of Juice with a Manifesto of the party itself.

Check out our SoundCloud for more!

What it does

After the overwhelmingly positive response we received to 2019's Award-Winning cult and agnostic classic, PROJEKT JUICE 2077 VR: After Dark, we knew that we needed to take gaming into the future.  For the first time ever gaming has been brought into the 21st century.  By looking further into the future than anyone before us, we can tell a harrowing tale of the folly of man, and the power of Juice.

This interactive experience allows you to enter the cyberpunk dystopian future where mega-corporations are in charge, drinks rule, and mechs are cool.  Juice has provided the means for the downtrodden to rise up against their oppresors.  As a pilot for the Ultimate Multiverse Bar (UMB), you are leading the charge.  Be The Hero the people need.  Suit up, punch buildings, score points, get Juice.

Challenges we ran into

Unity is a terrible engine that has been constantly riddled with major, breaking bugs since release. It is remarkable that anyone has ever managed to develop software in Unity.

Also, someone cheated in the Joy of MS Paint and I don't think I'll ever recover, i mean, who does that? right? we made it very clear that you had to use th

Accomplishments that we're proud of

When asked to comment, Kevin ""Ethan Hunter"" Yang and Maxine ""I'll leave it up to your better judgement"" Hartnett both shook their heads in silence.

Aaron ""Thor"" Aaeng and Connor ""dot fun"" Hudson are proud of them in any case.

What we learned

computers were a mistake

What's next for PROJEKT JUICE 2088 VR: 358MECH/fate

After our Oscar's snub, we found ourselves lost and without cause.  Through intensive soul-searching and group therapy, we now have direction.  So today, we are excited to announce the youth novelization of the PROJEKT JUICE Canon.  Written through a collaboration between Stephenie Meyer and Adam Levine, we are hoping to bring this sci-fi fantasy romance thriller to a younger demographic.
",,,,"","unity, pain, the-friends-we-made-along-the-way, garage-band-check-out-my-soundcloud",0,Vail,49,CU Boulder,Alienware Laptop,"",Schmaron,University of Colorado at Boulder,0
Automated Emergency Detection & Notification,https://hackcuv.devpost.com/submissions/113945-automated-emergency-detection-notification,"Inspiration

To create a fast, easy and reliable emergency helpline for people in need

What it does

Sends an automated emergency alert containing the exact location of the person who needs help, his name, city, etc to his emergency notification list

How we built it

We used Twitter API to look for particular keywords to mine the related tweets and use Twilio API to send automated call and SMS alerts to the corresponding persons.

Challenges we ran into

Fetching the location coordinates of the subscriber
Capturing real-time updates in form of a tweet
Parallel processing of data mining and processing
Filtering only relevant tweets
Connecting the Twitter API with Twilio API

Accomplishments that we're proud of

Meeting the objective of the project
Overcoming the challenges faced during the implementation

What we learned

Learning about Twitter API
Learning about Twilio API
tweepy and twilio modules of Python
Data extraction from json file
Parallel processing in Python 

What's next for Automated Emergency Detection & Notification

Making the users subscribe via an app
Making the filtering mechanism more reliable
Extending the support to other social media such as Facebook, Instagram, etc
",,,,"Coolest Hack with Twilio, Best use of Twitter API","python, twitter, twilio",0,Main Room,5,University of Colorado Boulder,"","",parthadroja,University of Colorado at Boulder,1,animeshgupta50
Decrypted The Game,https://hackcuv.devpost.com/submissions/113948-decrypted-the-game,"Inspiration

Elijah and I have grown up around computers, video games, and learning to program from young ages. Cybersecurity is something I have a passion for learning more about and Elijah has a knack for game design. We decided to incorporate both to help teach K-12 about SSL certificates.

What it does

This is a 2D adventure game that has the user run between NPC's attaching public and private keys to data to keep a ""chest"" safe with an ingredient needed for a wizard to access the internet.

How we built it

We used Unity, photoshop, C#, and our IDE's to create, code, and design the game along with some free assets online here and there.

Challenges we ran into

Learning how to create a quest object was a difficult situation for me to overcome. After spending a dumb amount of time creating a makeshift version of what I would have liked to do, I came along the idea of using a data structure to store quests along with information about them such as type/objective of the quest, locations to start and end, etc. Animation was an issue we ran into just because of time constraints. We wanted to create better character textures and could have done so if we had an extra 2 hours to create animations.

Accomplishments that we're proud of

Creating a working prototype of a game in under 48 hours (This was my [Chase] first time using Unity) that accomplished goals and complete quests to teach a user about a cyber security topic.

What we learned

I learned Unity from the ground up [Chase]. I knew C++ coming into this which translated nicely into C# with a few slight changes to syntax. Elijah definitely improved his scripting skills for animation and npc tracking.

What's next for Decrypted The Game

We'd like to refine the textures, add more levels with more quests about different topics within the cybersecurity realm. Animation for characters is definitely on of the first things we will tackle however. Maybe even a user customization screen for their character.
",https://youtu.be/Szyxp7RunZo,http://decryptedgame.com,,"Design, Build or Break Cyber Games for K-12 Education, MLH: Best Domain Registered with Domain.com","unity, c#, photoshop, pycharm, adobe-brackets",0,Lobby,11,"University of Colorado Denver, University of Colorado Colorado Springs","",Domain.com,wallacecs007,"University of Colorado Denver, University of Colorado at Colorado Springs",1,ElijahSalberg
Cipher Slueth: Case of the Missing Cellphones,https://hackcuv.devpost.com/submissions/113950-cipher-slueth-case-of-the-missing-cellphones,"Cipher Sleuth: Case of the Missing Cell Phones

Target Age Group: Grades 4-7 (ages 8-12)

Inspiration:

With the world increasingly going digital cybersecurity is important now more than ever. There are many unfilled jobs in the cyber security world with not enough people wanting to study the field. Therefore, more people are needed in the field! 
To help encourage kids to become interested in the field we’ve created a game that will help teach them some basics of the cybersecurity field. Our game took inspiration from games such as “Where in the World is Carmen Sandiego?”
We wanted this game to be something that kids would enjoy playing while still learning something.

Project Description:

The game would consist of a casebook in which there would be multiple cases that the player could solve. Each case would each have something to do with a topic in cybersecurity. The game is in the format of a point and click. There will be various objects within each scene that the player can interact with. Each scene will have a cipher that the player will need to successfully break before they are able to move on. The game is completed when the student solves all the ciphers in the case.

Goal for Hackathon:

Our goal in this 24 hour hackathon was to create a simple prototype of the game that would showcase one case in a casebook. The cybersecurity concept this case was focused on was encryption and decryption. Various famous ciphers are hidden throughout the game that the player has to solve. Because our game is aimed toward middle-grade children there is a reference manual at the bottom of the screen that the player can reference to find a description of the cipher and the key they must use to break the code.
The narrative of the game is that a middle school student has had their cell phone and their fellow students phone's confiscated and they want it back. Instead of waiting for the principal to return their cell phone the student has decided to take matters into his own hand and find out where the principal has hidden the cell phone. All the teachers at the school used to be members of the CIA and they all have a nasty habit of encrypting everything in his life using various ciphers. The first scene is the student breaking into the principal’s office to look for his phone. The student instead finds a sticky note attached to the computer (for a former CIA guy the principal doesn’t follow good practices) that is obviously the password. The player then must solve the cipher and enter the password to the computer to gain access.
Once the student gets access to the computer they find an encrypted file on their desktop that contains the cell phone location. Again, the player must then use a different decryption method to decipher what the encrypted file says. The file leads the student to the football field where the gym teacher has left a note that is clearly in Morse Code. The student must use the reference book to translate the message which they then find is still encrypted. So the player needs to decrypt the translated message again. The message is the code to a safe that the student knows is in the gym teacher’s office. If the code is inputted correctly then the student gets back their cellphone and has successfully completed the case.

What’s Next for Cyber Sleuths:

Adding more cases that the player can solve. Each case will be a new topic of cyber security
Adding a page where the player can encrypt and decrypt their own messages so that the player can get some practice with the ciphers presented in the case.
An idea we were toying around with at the beginning was creating this game as a web app. That way the game could be played anywhere, including cell phones, and if a teacher wanted to use this game in a classroom then they wouldn’t have to install the game on every computer.

Proud About:

Learning and building a UI, and a game from the ground up!

Stuff We Learned/New Technologies We Used:

The UI was written in PyQt5. No one on the team had any experience with PyQt or with building a fully functional UI.
Most members of our team didn’t have much experience with Python
Our biggest learning goal for this hackathon was to get more practical experience with Python and to learn about UI design and implementation.

Challenges We Faced:

We originally wanted to use PyQt because we thought that we would be able to use QtCreator with the designer to help us build the interface. Then we could spend most of our time linking the scenes.
No one on the team knew anything about PyQt and getting started with doing simple actions such as adding a button to the screen proved to be more time consuming than we expected.
PyQt5 doesn’t have a lot of documentation therefore making it difficult for us to figure out how to connect all the UI elements.
",,https://gitlab.com/safetypanda/enigmalearning,,"Design, Build or Break Cyber Games for K-12 Education","python, pyqt5",1,Winter Park,8,Colorado State University,"","",JamesGillman,"Colorado State University, Georgia Institute of Technology - Main Campus",3,MiguelAnGuerrero,TDWL-PDA,lukejohn975
Encrypt-to-Home,https://hackcuv.devpost.com/submissions/113951-encrypt-to-home,"Inspiration

We knew that, psychologically, children are best languages best at a very young age. This includes pattern recognition, which is a large part of decryption. We implemented facilitation style-teaching, which is an effective teaching style that emphasizes ideas of exploration and analysis to develop critical thinking. These attributes help with cyber security and understanding the ideas of encryption. Ideas in our game also reinforces educational ideas, such as mathematics and logical thinking, which are key skills in cyber security and encryption.  This inspired us to design a young children's game aimed to introduce children to the idea of encryption and decryption on the surface level! 

What it does

This is a three-level story/exploration game. Crypto, a lost balloon has been blown away from his home. Read the encrypted sign and decode them to gain hints on how to bring him back home! This is simple, and gives feedback for children who may not pick up on the pattern. Also, this is brightly and colorfully hand-designed to appeal to children at a young age! 

How we built it

We had two members focus on the JavaScript code, one member focus on design, and one member work on a little bit of both. We digitally drew all of the backgrounds, characters, and even specific details. One member used a drawing tablet to deign and put together all of the backgrounds. Another member used an 8-bit art maker to design all of the clickable details (trees, characters, signs, nature, etc.). We purposely hand-designed all of the components because we wanted to appeal to young kids through the colorful 8-bit animations and implementation of nature to create a playful environment. 

Challenges we ran into

Most of our team members were not familiar with object-oriented languages, so it was difficult for us to get started and on the same page. We had to do a lot of self research and find out how to make a beautiful game. None of us has ever coded a game before, and that, initially, was a big challenge.

Accomplishments that we're proud of

We are very proud of the interface in our game. We feel very accomplished that we were able to hand design every component, and this game feels like something we truly made. Additionally, we are proud to have made a game through an object-oriented language. In the beginning of the day yesterday, most of our group wouldn't have even known how to print ""hello world"", and within 24 hours, we were able to make a game!

What we learned

We learned a lot about JavaScript, which was something unfamiliar to all of us before. We feel like we have learned a lot about how much research can help us learn a computer language. Also, we learned a lot about efficient way children learn, and how to make games that will help children develop skills in basic encryption!

What's next for Encrypt-to-Home

MAKE MORE LEVELS!
We want to make more levels and possibly implement more challenges that teach children other encryption skills beyond Caesar Cipher to appeal to children who have already mastered the basics!
",,,,"Design, Build or Break Cyber Games for K-12 Education, Best Beginner Hack",javascript,1,Vail,53,University of Colorado @ Boulder,"","",kewo2098,University of Colorado at Boulder,2,ViennaWong,dech2018
Back to the Cipher,https://hackcuv.devpost.com/submissions/113952-back-to-the-cipher,"Inspiration

Our inspiration was the history of computer science (and how far we have come) that is not often talked about, and combining it with cryptography which is an important aspect of cybersecurity. Then we combined these ideas with Back to the Future (and time travelling) to add a twist.

What it does

It is an interactive game that takes the user (ideally 12+) through history and teaches them about the origins and advancements of cryptography. 

It will involve various historic scenes that teach them how to use different cryptographic methods by solving puzzles to get back to the present.  

How we built it

We designed the concept and ideas for various levels of the game, as well as mock-up visuals for the game.

Challenges we ran into

Making the game interesting and engaging was a challenge, as well as making advanced concepts simple enough for beginners to grasp.

Accomplishments that we're proud of

We're proud of our idea because we took something that typically wouldn't be mixed (history and cryptography) and made it into an entertaining educational game.

What we learned

We learned a lot about how to engage younger audiences and cater to them while also teaching them.

What's next for Back to the Cipher

Now that we have the idea and examples of levels, our next step is to implement the game for users to actually play.
",,http://www.backtothecipher.com,,"Design, Build or Break Cyber Games for K-12 Education, Best Beginner Hack, MLH: Best Domain Registered with Domain.com","",1,Main entry room,near table 48 (by Splunk),University of Colorado at Boulder,"","",IsabellaSchneider,University of Colorado at Boulder,2,mlay0797,drakerutherford
Web Histotree,https://hackcuv.devpost.com/submissions/113953-web-histotree,"Inspiration

Often times when surfing the web it's easy to get lost and wonder how you arrived at the page you are currently viewing.

What it does

This program builds a directed acyclic graph whose paths coincide with your web browsing history. This is so that it is clear when you clicked on links, created new tabs or windows, or navigated to an alternate website.

How we built it

Using Javascript, Sigma, HTML/CSS, D3 (that didn't work), and polyfill for cross-browser support. 

Challenges we ran into

JavaScript does not play nice with extensions. Much of the functionality afforded by JS is subverted by the extension's own necessities. 

Accomplishments that we're proud of

It works!

What we learned

How Sigma.js works, JavaScript for loops aren't nice, and JS libraries suck in the use of extensions

What's next for Web Histotree

FIND OUT NEXT TIME 
",,https://github.com/Sale3054/hackCU2019.git,,"","javascript, sigma.js, html, css",0,Eldora,2...?,CU Boulder (in its entirety),"","",Whatamia,University of Colorado at Boulder,1,p-lucero
TangrAI,https://hackcuv.devpost.com/submissions/113954-tangrai,"Inspiration

We are machine learning lovers and we wanted to perform a new project around reinforcement learning. 

What it does

Our program has learnt from zero, how to resolve the Tangram puzzle. The game starts with an empty table, and it have 7 pieces available for resolving the puzzle. The program has learnt itself which order it will put the pieces and the position in where goes each piece.

How we built it

A reinforcement learning project has three main parts: the environment, the agent and the engine. We have built all of this parts from zero, because it has no other projects for Tangram Puzzle. Although, we have used scripts from Github for having an idea. 

Challenges we ran into

Carles is a electronic engineer and Pau is a mechanical engineer. Our main challenge has been the performance of a computer science project of huge difficulty without have studied any degree in computer science. For us, that we love machine learning, this means that we have enough capabilities for achieve and solve successfully computer science projects.

Accomplishments that we're proud of

We are really proud of finishing it during this hackathon, due to we thought that we would finish our project at home on the next weeks. However, we have not had enough time for finishing the training because it takes to much time and we have run out of it. 

What we learned

What's next for TangrAI
",,https://github.com/paucutrina/HackathonUC,,Best Beginner Hack,"python, spyder",1,main auditorium,35,University of Colorado of Colorado Springs,"","",carlesprego,University of Colorado at Colorado Springs,1,paucutrina
MaraudersMap,https://hackcuv.devpost.com/submissions/113955-maraudersmap,"Inspiration

As construction technologies transcend present day limitations on size. We spend more-and-more time in the indoor environment. However, as our environment evolves we need services that compliment this change. Considering that bold GPS is unable to penetrate concrete structures (does not work indoors).
 There is a need for alternate technologies or services that enable location based services (LBS) such as navigation and localization in indoor environments such as Malls, Grocery Stores Universities and Hospitals. bold We believe that indoor localization services can not only help you find your classroom on the first day of school, it can help emergency services locate you in case of of a major health hazard such as fire or injury.

What it does

boldThe Marauder's Map is an indoor localization solution implemented on the Android Platform. bold Considering the sensors suit available on smartphones and their ubiquitous nature, they are the most suitable platform for a realistic and feasible solution to indoor localization challenges. 

How we built it

The Marauder's Map combines dead reckoning (DR) and machine learning (ML) to predict the user's location in real time. Dead reckoning computes the next location of a user based on the previous location and direction estimate from the compass. We combined DR with Wi-Fi fingerprinting-based localization in an energy-efficient manner. Fingerprinting-based techniques deduce the location of a user based on previous knowledge of the environment.   

Challenges we ran into

Wi-Fi fingerprints for a location change over time. This causes issues with maintaining localization accuracy over time. Environmental noise leads to disturbance in magnetic fields, negatively impacting dead reckoning. Wi-Fi scans consume quite a bit of energy and time on a smartphone. We had to find the right balance between the two.

Accomplishments that we're proud of

Completed a fingerprint sampling app and a localization app in under 24 hours!

What we learned

Sharpened my skills with Android development, and APIs to speed-up dev-time!

What's next for MaraudersMap

Combining data from several users in real time, to form a true MaraudersMap. 
_ italics _""We solemnly swear we are up to no good"" 
",,https://github.com/saitiku/HackCU_V_DISH,,Dish Device Tracker,android-studio,0,C120,45,Colorado State University,"","",saitiku,Colorado State University,1,cinedan
Domain submission ,https://hackcuv.devpost.com/submissions/113956-domain-submission,"Inspiration

The memes.
",,https://defnotrickrolled.com/,,MLH: Best Domain Registered with Domain.com,"domain, website-builder",1,Main entrance room,near 48 by splunk,CU boulder,"","",mlay0797,University of Colorado at Boulder,1,drakerutherford
